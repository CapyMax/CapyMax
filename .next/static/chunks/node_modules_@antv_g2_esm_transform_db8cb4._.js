(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/node_modules_@antv_g2_esm_transform_db8cb4._.js", {

"[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "column": (()=>column),
    "columnOf": (()=>columnOf),
    "constant": (()=>constant),
    "inferredColumn": (()=>inferredColumn),
    "isObject": (()=>isObject),
    "maybeColumnOf": (()=>maybeColumnOf),
    "nonConstantColumn": (()=>nonConstantColumn),
    "visualColumn": (()=>visualColumn)
});
function column(value, field) {
    if (value === null) return undefined;
    return {
        type: 'column',
        value,
        field
    };
}
function inferredColumn(value, field) {
    const c = column(value, field);
    return Object.assign(Object.assign({}, c), {
        inferred: true
    });
}
function visualColumn(value, field) {
    if (value === null) return undefined;
    return {
        type: 'column',
        value,
        field,
        visual: true
    };
}
function nonConstantColumn(value, field) {
    const c = column(value, field);
    return Object.assign(Object.assign({}, c), {
        constant: false
    });
}
function constant(I, value) {
    const array = [];
    for (const i of I)array[i] = value;
    return array;
}
function columnOf(encode, key) {
    const channel = encode[key];
    if (!channel) return [
        null,
        null
    ];
    const { value, field = null } = channel;
    return [
        value,
        field
    ];
}
function maybeColumnOf(encode, ...K) {
    for (const key of K){
        if (typeof key === 'string') {
            const [KV, fv] = columnOf(encode, key);
            if (KV !== null) return [
                KV,
                fv
            ];
        } else {
            return [
                key,
                null
            ];
        }
    }
    return [
        null,
        null
    ];
}
function isObject(d) {
    if (d instanceof Date) return false;
    return typeof d === 'object';
} //# sourceMappingURL=helper.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeTitle.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeTitle": (()=>MaybeTitle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$dateFormat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/dateFormat.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
;
;
;
;
const MaybeTitle = (options = {})=>{
    const { channel = 'x' } = options;
    return (I, mark)=>{
        const { encode } = mark;
        const { tooltip } = mark;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isUnset"])(tooltip)) return [
            I,
            mark
        ];
        const { title } = tooltip;
        if (title !== undefined) return [
            I,
            mark
        ];
        const titles = Object.keys(encode).filter((key)=>key.startsWith(channel)).filter((key)=>!encode[key].inferred).map((key)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, key)).filter(([T])=>T).map((d)=>d[0]);
        if (titles.length === 0) return [
            I,
            mark
        ];
        const T = [];
        for (const i of I){
            T[i] = {
                value: titles.map((t)=>t[i] instanceof Date ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$dateFormat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["dynamicFormatDateTime"])(t[i]) : t[i]).join(', ')
            };
        }
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                tooltip: {
                    title: T
                }
            })
        ];
    };
};
MaybeTitle.props = {}; //# sourceMappingURL=maybeTitle.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeTooltip.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeTooltip": (()=>MaybeTooltip)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
;
;
const MaybeTooltip = (options)=>{
    const { channel } = options;
    return (I, mark)=>{
        const { encode, tooltip } = mark;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isUnset"])(tooltip)) return [
            I,
            mark
        ];
        const { items = [] } = tooltip;
        if (!items || items.length > 0) return [
            I,
            mark
        ];
        const channels = Array.isArray(channel) ? channel : [
            channel
        ];
        const newItems = channels.flatMap((channel)=>Object.keys(encode).filter((key)=>key.startsWith(channel)).map((key)=>{
                const { field, value, inferred = false, aggregate } = encode[key];
                if (inferred) return null;
                // Do not show inferred column.
                if (aggregate && value) return {
                    channel: key
                };
                if (field) return {
                    field
                };
                if (value) return {
                    channel: key
                };
                return null;
            }).filter((d)=>d !== null));
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                tooltip: {
                    items: newItems
                }
            })
        ];
    };
};
MaybeTooltip.props = {}; //# sourceMappingURL=maybeTooltip.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeKey.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeKey": (()=>MaybeKey)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
;
const MaybeKey = ()=>{
    return (I, mark)=>{
        const { encode } = mark;
        const { key } = encode, rest = __rest(encode, [
            "key"
        ]);
        if (key !== undefined) return [
            I,
            mark
        ];
        const values = Object.values(rest).map(({ value })=>value);
        const K = I.map((i)=>values.filter(Array.isArray).map((V)=>V[i]).join('-'));
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                encode: {
                    key: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(K)
                }
            })
        ];
    };
};
MaybeKey.props = {}; //# sourceMappingURL=maybeKey.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/utils/order.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "applyOrder": (()=>applyOrder),
    "createGroups": (()=>createGroups),
    "domainOf": (()=>domainOf),
    "normalizeComparator": (()=>normalizeComparator)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/group.js [app-client] (ecmascript) <export default as group>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$ascending$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ascending$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/ascending.js [app-client] (ecmascript) <export default as ascending>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$array$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/array.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$maxIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__maxIndex$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/maxIndex.js [app-client] (ecmascript) <export default as maxIndex>");
;
;
;
;
function createGroups(groupBy, I, mark) {
    const { encode } = mark;
    if (groupBy === null) return [
        I
    ];
    const G = normalizeGroupBy(groupBy).map((k)=>{
        var _a;
        return [
            k,
            (_a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, k)) === null || _a === void 0 ? void 0 : _a[0]
        ];
    }).filter(([, column])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defined"])(column));
    const key = (i)=>G.map(([, V])=>V[i]).join('-');
    return Array.from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__["group"])(I, key).values());
}
function normalizeComparator(order) {
    if (Array.isArray(order)) return createFieldsOrder(order);
    if (typeof order === 'function') return createFunctionOrder(order);
    if (order === 'series') return createSeriesOrder;
    if (order === 'value') return createValueOrder;
    if (order === 'sum') return createSumOrder;
    if (order === 'maxIndex') return createMaxIndexOrder;
    return null;
}
function applyOrder(groups, comparator) {
    for (const group of groups){
        group.sort(comparator);
    }
}
function domainOf(value, scale) {
    return (scale === null || scale === void 0 ? void 0 : scale.domain) || Array.from(new Set(value));
}
function normalizeGroupBy(groupBy) {
    if (Array.isArray(groupBy)) return groupBy;
    return [
        groupBy
    ];
}
function createSeriesOrder(data, Y, S) {
    return ascendingComparator((i)=>S[i]);
}
function createFunctionOrder(order) {
    return (data, Y, S)=>{
        return ascendingComparator((i)=>order(data[i]));
    };
}
function createFieldsOrder(order) {
    return (data, Y, S)=>{
        return (i, j)=>order.reduce((eq, f)=>eq !== 0 ? eq : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$ascending$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ascending$3e$__["ascending"])(data[i][f], data[j][f]), 0);
    };
}
function createValueOrder(data, Y, S) {
    return ascendingComparator((i)=>Y[i]);
}
function createSumOrder(data, Y, S) {
    const I = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$array$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["indexOf"])(data);
    const groups = Array.from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__["group"])(I, (i)=>S[+i]).entries());
    const seriesSum = new Map(groups.map(([k, GI])=>[
            k,
            GI.reduce((s, i)=>s + +Y[i])
        ]));
    return ascendingComparator((i)=>seriesSum.get(S[i]));
}
function createMaxIndexOrder(data, Y, S) {
    const I = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$array$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["indexOf"])(data);
    const groups = Array.from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__["group"])(I, (i)=>S[+i]).entries());
    const seriesMaxIndex = new Map(groups.map(([k, GI])=>[
            k,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$maxIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__maxIndex$3e$__["maxIndex"])(GI, (i)=>Y[i])
        ]));
    return ascendingComparator((i)=>seriesMaxIndex.get(S[i]));
}
function ascendingComparator(order) {
    return (i, j)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$ascending$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ascending$3e$__["ascending"])(order(i), order(j));
} //# sourceMappingURL=order.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/stackY.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "StackY": (()=>StackY)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/order.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
;
;
;
const StackY = (options = {})=>{
    const { groupBy = 'x', orderBy = null, reverse = false, y: fromY = 'y', y1: fromY1 = 'y1', series = true } = options;
    return (I, mark)=>{
        var _a;
        const { data, encode, style = {} } = mark;
        const [Y, fy] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, 'y');
        const [Y1, fy1] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, 'y1');
        const [S] = series ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumnOf"])(encode, 'series', 'color') : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, 'color');
        // Create groups and apply specified order for each group.
        const groups = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createGroups"])(groupBy, I, mark);
        const createComparator = (_a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeComparator"])(orderBy)) !== null && _a !== void 0 ? _a : ()=>null;
        const comparator = createComparator(data, Y, S);
        if (comparator) (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyOrder"])(groups, comparator);
        // Stack y channels to produce new y and y1 channel.
        const newY = new Array(I.length);
        const newY1 = new Array(I.length);
        const TY = new Array(I.length);
        const F = [];
        const L = [];
        for (const G of groups){
            if (reverse) G.reverse();
            // For range interval with specified y and y1.
            const start = Y1 ? +Y1[G[0]] : 0;
            // Split positive indices of Y and negative Y.
            const PG = [];
            const NG = [];
            for (const i of G){
                const y = TY[i] = +Y[i] - start;
                if (y < 0) NG.push(i);
                else if (y >= 0) PG.push(i);
            }
            // Store the first and last layer.
            const FG = PG.length > 0 ? PG : NG;
            const LG = NG.length > 0 ? NG : PG;
            let i = PG.length - 1;
            let j = 0;
            // Find the last non-zero index.
            while(i > 0 && Y[FG[i]] === 0)i--;
            // Find the first non-zero index.
            while(j < LG.length - 1 && Y[LG[j]] === 0)j++;
            F.push(FG[i]);
            L.push(LG[j]);
            // Stack negative y in reverse order.
            let ny = start;
            for (const i of NG.reverse()){
                const y = TY[i];
                ny = newY[i] = (newY1[i] = ny) + y;
            }
            // Stack positive y in input order.
            let py = start;
            for (const i of PG){
                const y = TY[i];
                if (y > 0) py = newY[i] = (newY1[i] = py) + y;
                else newY[i] = newY1[i] = py;
            }
        }
        // Only set top radius for the first layer,
        // and set bottom radius for the last layer.
        const FS = new Set(F);
        const LS = new Set(L);
        // Choose new y or y1 channel as the new y channel.
        const V = fromY === 'y' ? newY : newY1;
        const V1 = fromY1 === 'y' ? newY : newY1;
        let newEncode;
        // mark point will compute the actural Y = (y + y1) / 2 if y1 exists
        if (mark.type === 'point') {
            newEncode = {
                y0: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["inferredColumn"])(Y, fy),
                y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(V, fy)
            };
        } else {
            newEncode = {
                y0: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["inferredColumn"])(Y, fy),
                y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(V, fy),
                y1: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(V1, fy1)
            };
        }
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                encode: Object.assign({}, newEncode),
                style: Object.assign({
                    first: (_, i)=>FS.has(i),
                    last: (_, i)=>LS.has(i)
                }, style)
            })
        ];
    };
};
StackY.props = {}; //# sourceMappingURL=stackY.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/groupN.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "GroupN": (()=>GroupN)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$array$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/array.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$mean$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__mean$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/mean.js [app-client] (ecmascript) <export default as mean>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$median$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__median$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/median.js [app-client] (ecmascript) <export default as median>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/max.js [app-client] (ecmascript) <export default as max>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/min.js [app-client] (ecmascript) <export default as min>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/sum.js [app-client] (ecmascript) <export default as sum>");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
;
;
;
function builtinFormatter(summary) {
    return (d)=>d === null ? summary : `${summary} of ${d}`;
}
function normalizeReducer(reducer) {
    if (typeof reducer === 'function') return [
        reducer,
        null
    ];
    const registry = {
        mean,
        max,
        count,
        first,
        last,
        sum,
        min,
        median
    };
    const reducerFunction = registry[reducer];
    if (!reducerFunction) throw new Error(`Unknown reducer: ${reducer}.`);
    return reducerFunction();
}
function mean() {
    const reducer = (I, V)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$mean$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__mean$3e$__["mean"])(I, (i)=>+V[i]);
    const formatter = builtinFormatter('mean');
    return [
        reducer,
        formatter
    ];
}
function median() {
    const reducer = (I, V)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$median$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__median$3e$__["median"])(I, (i)=>+V[i]);
    const formatter = builtinFormatter('median');
    return [
        reducer,
        formatter
    ];
}
function max() {
    const reducer = (I, V)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__["max"])(I, (i)=>+V[i]);
    const formatter = builtinFormatter('max');
    return [
        reducer,
        formatter
    ];
}
function min() {
    const reducer = (I, V)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__["min"])(I, (i)=>+V[i]);
    const formatter = builtinFormatter('min');
    return [
        reducer,
        formatter
    ];
}
function count() {
    const reducer = (I, V)=>I.length;
    const formatter = builtinFormatter('count');
    return [
        reducer,
        formatter
    ];
}
function sum() {
    const reducer = (I, V)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__["sum"])(I, (i)=>+V[i]);
    const formatter = builtinFormatter('sum');
    return [
        reducer,
        formatter
    ];
}
function first() {
    const reducer = (I, V)=>V[I[0]];
    const formatter = builtinFormatter('first');
    return [
        reducer,
        formatter
    ];
}
function last() {
    const reducer = (I, V)=>V[I[I.length - 1]];
    const formatter = builtinFormatter('last');
    return [
        reducer,
        formatter
    ];
}
const GroupN = (options = {})=>{
    const { groupBy } = options, rest = __rest(options, [
        "groupBy"
    ]);
    return (I, mark)=>{
        const { data, encode } = mark;
        const groups = groupBy(I, mark);
        if (!groups) return [
            I,
            mark
        ];
        // Extract field from from channel
        // x1 from x, y1 from y, etc,.
        const maybeFrom = (field, reducer)=>{
            if (field) return field;
            const { from } = reducer;
            if (!from) return field;
            const [, field1] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, from);
            return field1;
        };
        const outputs = Object.entries(rest).map(([channel, reducer])=>{
            const [reducerFunction, formatter] = normalizeReducer(reducer);
            const [V, field] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, channel);
            const field1 = maybeFrom(field, reducer);
            const RV = groups.map((I)=>reducerFunction(I, V !== null && V !== void 0 ? V : data));
            return [
                channel,
                Object.assign(Object.assign({}, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nonConstantColumn"])(RV, (formatter === null || formatter === void 0 ? void 0 : formatter(field1)) || field1)), {
                    aggregate: true
                })
            ];
        });
        const reducedColumns = Object.keys(encode).map((key)=>{
            const [V, fv] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, key);
            const GV = groups.map((I)=>V[I[0]]);
            return [
                key,
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(GV, fv)
            ];
        });
        const GD = groups.map((I)=>data[I[0]]);
        const GI = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$array$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["indexOf"])(groups);
        return [
            GI,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                data: GD,
                encode: Object.fromEntries([
                    ...reducedColumns,
                    ...outputs
                ])
            })
        ];
    };
};
GroupN.props = {}; //# sourceMappingURL=groupN.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/bin.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Bin": (()=>Bin)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$bin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__bin$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/bin.js [app-client] (ecmascript) <export default as bin>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/group.js [app-client] (ecmascript) <export default as group>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$groupN$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/groupN.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/extent.js [app-client] (ecmascript) <export default as extent>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$threshold$2f$scott$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__thresholdScott$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/threshold/scott.js [app-client] (ecmascript) <export default as thresholdScott>");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
;
;
;
const THRESHOLD = 'thresholds';
/**
 * @see https://github.com/observablehq/plot/blob/main/src/transforms/bin.js
 */ function thresholdAuto(values) {
    const [min, max] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__["extent"])(values);
    return Math.min(200, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$threshold$2f$scott$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__thresholdScott$3e$__["thresholdScott"])(values, min, max));
}
const Bin = (options = {})=>{
    const { groupChannels = [
        'color'
    ], binChannels = [
        'x',
        'y'
    ] } = options, rest = __rest(options, [
        "groupChannels",
        "binChannels"
    ]);
    const channelIndexKey = {};
    // Group indexes and update channelIndexKey.
    const groupBy = (I, mark)=>{
        const { encode } = mark;
        const binValues = binChannels.map((channel)=>{
            const [V] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, channel);
            return V;
        });
        const thresholds = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["subObject"])(rest, THRESHOLD);
        const DI = I.filter((i)=>binValues.every((V)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defined"])(V[i])));
        // Group indexes by both discrete and quantitative channels.
        const groupKeys = [
            // For discrete channels, use value as group key.
            ...groupChannels.map((d)=>{
                const [V] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, d);
                return V;
            }).filter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defined"]).map((V)=>(i)=>V[i]),
            // For quantitative channels, use extent of bin as group key.
            ...binChannels.map((d, i)=>{
                const V = binValues[i];
                const t = thresholds[d] || thresholdAuto(V);
                const bins = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$bin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__bin$3e$__["bin"])().thresholds(t).value((i)=>+V[i])(DI);
                const indexKey = new Map(bins.flatMap((bin)=>{
                    const { x0, x1 } = bin;
                    const key = `${x0},${x1}`;
                    return bin.map((i)=>[
                            i,
                            key
                        ]);
                }));
                channelIndexKey[d] = indexKey;
                return (i)=>indexKey.get(i);
            })
        ];
        // Group by indexes by channel keys.
        const key = (i)=>groupKeys.map((key)=>key(i)).join('-');
        return Array.from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__["group"])(DI, key).values());
    };
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$groupN$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GroupN"])(Object.assign(Object.assign(Object.assign({}, Object.fromEntries(Object.entries(rest).filter(([k])=>!k.startsWith(THRESHOLD)))), Object.fromEntries(binChannels.flatMap((channel)=>{
        const start = ([i])=>+channelIndexKey[channel].get(i).split(',')[0];
        const end = ([i])=>+channelIndexKey[channel].get(i).split(',')[1];
        end.from = channel;
        return [
            [
                channel,
                start
            ],
            [
                `${channel}1`,
                end
            ]
        ];
    }))), {
        groupBy
    }));
};
Bin.props = {}; //# sourceMappingURL=bin.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/binX.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "BinX": (()=>BinX)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$bin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/bin.js [app-client] (ecmascript)");
;
const BinX = (options = {})=>{
    const { thresholds } = options;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$bin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Bin"])(Object.assign(Object.assign({}, options), {
        thresholdsX: thresholds,
        groupChannels: [
            'color'
        ],
        binChannels: [
            'x'
        ]
    }));
};
BinX.props = {}; //# sourceMappingURL=binX.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/dodgeX.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "DodgeX": (()=>DodgeX)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/order.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
;
;
const DodgeX = (options = {})=>{
    const { groupBy = 'x', reverse = false, orderBy, padding } = options, rest = __rest(options, [
        "groupBy",
        "reverse",
        "orderBy",
        "padding"
    ]);
    return (I, mark)=>{
        const { data, encode, scale } = mark;
        const { series: scaleSeries } = scale;
        const [Y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, 'y');
        const [S] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumnOf"])(encode, 'series', 'color');
        const domainSeries = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["domainOf"])(S, scaleSeries);
        const newMark = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
            scale: {
                series: {
                    domain: domainSeries,
                    paddingInner: padding
                }
            }
        });
        // Create groups and apply specified order for each group.
        const groups = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createGroups"])(groupBy, I, mark);
        const createComparator = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeComparator"])(orderBy);
        if (!createComparator) {
            return [
                I,
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])(newMark, {
                    encode: {
                        series: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(S)
                    }
                })
            ];
        }
        // Sort and Update series for each mark related to series domain.
        const comparator = createComparator(data, Y, S);
        if (comparator) (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyOrder"])(groups, comparator);
        const newS = new Array(I.length);
        for (const G of groups){
            if (reverse) G.reverse();
            for(let i = 0; i < G.length; i++){
                newS[G[i]] = domainSeries[i];
            }
        }
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])(newMark, {
                encode: {
                    series: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(orderBy ? newS : S)
                }
            })
        ];
    };
};
DodgeX.props = {}; //# sourceMappingURL=dodgeX.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/jitter.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Jitter": (()=>Jitter),
    "interpolate": (()=>interpolate),
    "rangeOf": (()=>rangeOf)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/order.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$scale$2f$esm$2f$scales$2f$band$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/scale/esm/scales/band.js [app-client] (ecmascript)");
;
;
;
;
function rangeOf(value, scaleOptions, padding) {
    if (value === null) return [
        -0.5,
        0.5
    ];
    const domain = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["domainOf"])(value, scaleOptions);
    const scale = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$scale$2f$esm$2f$scales$2f$band$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Band"]({
        domain,
        range: [
            0,
            1
        ],
        padding
    });
    const step = scale.getBandWidth();
    return [
        -step / 2,
        step / 2
    ];
}
function interpolate(t, a, b) {
    return a * (1 - t) + b * t;
}
const Jitter = (options = {})=>{
    const { padding = 0, paddingX = padding, paddingY = padding, random = Math.random } = options;
    return (I, mark)=>{
        const { encode, scale } = mark;
        const { x: scaleX, y: scaleY } = scale;
        const [X] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, 'x');
        const [Y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, 'y');
        const rangeX = rangeOf(X, scaleX, paddingX);
        const rangeY = rangeOf(Y, scaleY, paddingY);
        const DY = I.map(()=>interpolate(random(), ...rangeY));
        const DX = I.map(()=>interpolate(random(), ...rangeX));
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({
                scale: {
                    x: {
                        padding: 0.5
                    },
                    y: {
                        padding: 0.5
                    }
                }
            }, mark, {
                encode: {
                    dy: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(DY),
                    dx: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(DX)
                }
            })
        ];
    };
};
Jitter.props = {}; //# sourceMappingURL=jitter.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/jitterX.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "JitterX": (()=>JitterX)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$jitter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/jitter.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
;
;
;
const JitterX = (options = {})=>{
    const { padding = 0, random = Math.random } = options;
    return (I, mark)=>{
        const { encode, scale } = mark;
        const { x: scaleX } = scale;
        const [X] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, 'x');
        const rangeX = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$jitter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeOf"])(X, scaleX, padding);
        const DX = I.map(()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$jitter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["interpolate"])(random(), ...rangeX));
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({
                scale: {
                    x: {
                        padding: 0.5
                    }
                }
            }, mark, {
                encode: {
                    dx: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(DX)
                }
            })
        ];
    };
};
JitterX.props = {}; //# sourceMappingURL=jitterX.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/jitterY.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "JitterY": (()=>JitterY)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$jitter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/jitter.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
;
;
;
const JitterY = (options = {})=>{
    const { padding = 0, random = Math.random } = options;
    return (I, mark)=>{
        const { encode, scale } = mark;
        const { y: scaleY } = scale;
        const [Y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, 'y');
        const rangeY = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$jitter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeOf"])(Y, scaleY, padding);
        const DY = I.map(()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$jitter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["interpolate"])(random(), ...rangeY));
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({
                scale: {
                    y: {
                        padding: 0.5
                    }
                }
            }, mark, {
                encode: {
                    dy: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(DY)
                }
            })
        ];
    };
};
JitterY.props = {}; //# sourceMappingURL=jitterY.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/symmetryY.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SymmetryY": (()=>SymmetryY)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/order.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/extent.js [app-client] (ecmascript) <export default as extent>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
;
;
;
const SymmetryY = (options = {})=>{
    const { groupBy = 'x' } = options;
    return (I, mark)=>{
        const { encode } = mark;
        const { x } = encode, rest = __rest(encode, [
            "x"
        ]);
        // Extract and create new channels starts with y, such as y, y1.
        const Yn = Object.entries(rest).filter(([k])=>k.startsWith('y')).map(([k])=>[
                k,
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, k)[0]
            ]);
        const newYn = Yn.map(([k])=>[
                k,
                new Array(I.length)
            ]);
        // Group marks into series by specified keys.
        const groups = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createGroups"])(groupBy, I, mark);
        const MY = new Array(groups.length);
        for(let i = 0; i < groups.length; i++){
            const I = groups[i];
            const Y = I.flatMap((i)=>Yn.map(([, V])=>+V[i]));
            const [minY, maxY] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$extent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__extent$3e$__["extent"])(Y);
            MY[i] = (minY + maxY) / 2;
        }
        const maxMiddleY = Math.max(...MY);
        for(let m = 0; m < groups.length; m++){
            const offset = maxMiddleY - MY[m];
            const I = groups[m];
            for (const i of I){
                for(let j = 0; j < Yn.length; j++){
                    const [, V] = Yn[j];
                    const [, newV] = newYn[j];
                    newV[i] = +V[i] + offset;
                }
            }
        }
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                encode: Object.fromEntries(newYn.map(([k, v])=>[
                        k,
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(v, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, k)[1])
                    ]))
            })
        ];
    };
};
SymmetryY.props = {}; //# sourceMappingURL=symmetryY.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/diffY.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "DiffY": (()=>DiffY)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/order.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
;
;
;
const DiffY = (options = {})=>{
    const { groupBy = 'x', series = true } = options;
    return (I, mark)=>{
        const { encode } = mark;
        const [Y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, 'y');
        const [_, fy1] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, 'y1');
        const [S] = series ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumnOf"])(encode, 'series', 'color') : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, 'color');
        // Create groups and apply specified order for each group.
        const groups = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createGroups"])(groupBy, I, mark);
        // Only adjust Y1 channel.
        const newY1 = new Array(I.length);
        for (const G of groups){
            const YG = G.map((i)=>+Y[i]);
            // Process each series.
            for(let idx = 0; idx < G.length; idx++){
                const i = G[idx];
                // Get the max Y of current group with current Y exclude.
                const max = Math.max(...YG.filter((_, _i)=>_i !== idx));
                // Diff Y value.
                newY1[i] = +Y[i] > max ? max : Y[i];
            }
        }
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                encode: {
                    y1: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(newY1, fy1)
                }
            })
        ];
    };
};
DiffY.props = {}; //# sourceMappingURL=diffY.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/stackEnter.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "StackEnter": (()=>StackEnter)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/group.js [app-client] (ecmascript) <export default as group>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/max.js [app-client] (ecmascript) <export default as max>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
;
;
;
const StackEnter = (options)=>{
    const { groupBy = [
        'x'
    ], reducer = (I, V)=>V[I[0]], orderBy = null, reverse = false, duration } = options;
    return (I, mark)=>{
        const { encode } = mark;
        // Extract group information by each specified channel,
        // and skip if all values of channels are empty.
        const by = Array.isArray(groupBy) ? groupBy : [
            groupBy
        ];
        const groupEntries = by.map((k)=>[
                k,
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, k)[0]
            ]);
        if (groupEntries.length === 0) return [
            I,
            mark
        ];
        // Nest group index and flatten them in right order among timeline.
        // [[1, 2, 3, 4, 5, 6]] ->
        // [[1, 2, 3], [4, 5, 6]] ->
        // [[1], [2], [3], [4], [5], [6]]
        let groups = [
            I
        ];
        for (const [, V] of groupEntries){
            const newGroups = [];
            for (const I of groups){
                const G = Array.from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__["group"])(I, (i)=>V[i]).values());
                // @todo sort by x.
                newGroups.push(...G);
            }
            groups = newGroups;
        }
        // const {color} = encode;
        if (orderBy) {
            const [V] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, orderBy);
            if (V) groups.sort((I, J)=>reducer(I, V) - reducer(J, V));
            if (reverse) groups.reverse();
        }
        // Stack delay for each group.
        const t = (duration || 3000) / groups.length;
        const [ED] = duration ? [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["constant"])(I, t)
        ] // If specified duration, generate enter duration for each.
         : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumnOf"])(encode, 'enterDuration', (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["constant"])(I, t));
        const [EDL] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeColumnOf"])(encode, 'enterDelay', (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["constant"])(I, 0));
        const newEnterDelay = new Array(I.length);
        for(let i = 0, pd = 0; i < groups.length; i++){
            const I = groups[i];
            const maxDuration = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__["max"])(I, (i)=>+ED[i]);
            for (const j of I)newEnterDelay[j] = +EDL[j] + pd;
            pd += maxDuration;
        }
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                encode: {
                    enterDuration: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["visualColumn"])(ED),
                    enterDelay: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["visualColumn"])(newEnterDelay)
                }
            })
        ];
    };
};
StackEnter.props = {}; //# sourceMappingURL=stackEnter.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/normalizeY.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "NormalizeY": (()=>NormalizeY)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/order.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/min.js [app-client] (ecmascript) <export default as min>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/max.js [app-client] (ecmascript) <export default as max>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$mean$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__mean$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/mean.js [app-client] (ecmascript) <export default as mean>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$median$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__median$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/median.js [app-client] (ecmascript) <export default as median>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/sum.js [app-client] (ecmascript) <export default as sum>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$deviation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deviation$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/deviation.js [app-client] (ecmascript) <export default as deviation>");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
;
;
;
;
function normalizeBasis(basis) {
    if (typeof basis === 'function') return basis;
    const registry = {
        min: (I, Y)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__["min"])(I, (i)=>Y[+i]),
        max: (I, Y)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__["max"])(I, (i)=>Y[+i]),
        first: (I, Y)=>Y[I[0]],
        last: (I, Y)=>Y[I[I.length - 1]],
        mean: (I, Y)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$mean$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__mean$3e$__["mean"])(I, (i)=>Y[+i]),
        median: (I, Y)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$median$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__median$3e$__["median"])(I, (i)=>Y[+i]),
        sum: (I, Y)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__["sum"])(I, (i)=>Y[+i]),
        deviation: (I, Y)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$deviation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deviation$3e$__["deviation"])(I, (i)=>Y[+i])
    };
    return registry[basis] || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__["max"];
}
const NormalizeY = (options = {})=>{
    const { groupBy = 'x', basis = 'max' } = options;
    return (I, mark)=>{
        const { encode, tooltip } = mark;
        const { x } = encode, rest = __rest(encode, [
            "x"
        ]);
        // Extract and create new channels starts with y, such as y, y1.
        const Yn = Object.entries(rest).filter(([k])=>k.startsWith('y')).map(([k])=>[
                k,
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, k)[0]
            ]);
        const [, Y] = Yn.find(([k])=>k === 'y');
        const newYn = Yn.map(([k])=>[
                k,
                new Array(I.length)
            ]);
        // Group marks into series by specified keys.
        const groups = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createGroups"])(groupBy, I, mark);
        // Transform y channels for each group based on basis.
        const basisFunction = normalizeBasis(basis);
        for (const I of groups){
            // Compute basis only base on y.
            const basisValue = basisFunction(I, Y);
            for (const i of I){
                for(let j = 0; j < Yn.length; j++){
                    const [, V] = Yn[j];
                    const [, newV] = newYn[j];
                    newV[i] = +V[i] / basisValue;
                }
            }
        }
        const specifiedTooltip = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isUnset"])(tooltip) || (tooltip === null || tooltip === void 0 ? void 0 : tooltip.items) && (tooltip === null || tooltip === void 0 ? void 0 : tooltip.items.length) !== 0;
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, Object.assign({
                encode: Object.fromEntries(newYn.map(([k, v])=>[
                        k,
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(v, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, k)[1])
                    ]))
            }, !specifiedTooltip && encode.y0 && {
                tooltip: {
                    items: [
                        {
                            channel: 'y0'
                        }
                    ]
                }
            }))
        ];
    };
};
NormalizeY.props = {}; //# sourceMappingURL=normalizeY.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/select.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Select": (()=>Select)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/order.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$maxIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__maxIndex$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/maxIndex.js [app-client] (ecmascript) <export default as maxIndex>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$minIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__minIndex$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/minIndex.js [app-client] (ecmascript) <export default as minIndex>");
;
;
;
function first(I, V) {
    return [
        I[0]
    ];
}
function last(I, V) {
    const i = I.length - 1;
    return [
        I[i]
    ];
}
function max(I, V) {
    const i = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$maxIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__maxIndex$3e$__["maxIndex"])(I, (i)=>V[i]);
    return [
        I[i]
    ];
}
function min(I, V) {
    const i = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$minIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__minIndex$3e$__["minIndex"])(I, (i)=>V[i]);
    return [
        I[i]
    ];
}
function normalizeSelector(selector) {
    if (typeof selector === 'function') return selector;
    const registry = {
        first,
        last,
        max,
        min
    };
    return registry[selector] || first;
}
const Select = (options = {})=>{
    const { groupBy = 'series', channel, selector } = options;
    return (I, mark)=>{
        const { encode } = mark;
        const groups = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createGroups"])(groupBy, I, mark);
        const [V] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, channel);
        const selectFunction = normalizeSelector(selector);
        return [
            groups.flatMap((GI)=>selectFunction(GI, V)),
            mark
        ];
    };
};
Select.props = {}; //# sourceMappingURL=select.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/selectX.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SelectX": (()=>SelectX)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$select$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/select.js [app-client] (ecmascript)");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
const SelectX = (options = {})=>{
    const { selector } = options, rest = __rest(options, [
        "selector"
    ]);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$select$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Select"])(Object.assign({
        channel: 'x',
        selector
    }, rest));
};
SelectX.props = {}; //# sourceMappingURL=selectX.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/selectY.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SelectY": (()=>SelectY)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$select$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/select.js [app-client] (ecmascript)");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
const SelectY = (options = {})=>{
    const { selector } = options, rest = __rest(options, [
        "selector"
    ]);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$select$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Select"])(Object.assign({
        channel: 'y',
        selector
    }, rest));
};
SelectY.props = {}; //# sourceMappingURL=selectY.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/group.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Group": (()=>Group)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/order.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$groupN$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/groupN.js [app-client] (ecmascript)");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
;
const Group = (options = {})=>{
    const { channels = [
        'x',
        'y'
    ] } = options, rest = __rest(options, [
        "channels"
    ]);
    const groupBy = (I, mark)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createGroups"])(channels, I, mark);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$groupN$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GroupN"])(Object.assign(Object.assign({}, rest), {
        groupBy
    }));
};
Group.props = {}; //# sourceMappingURL=group.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/groupX.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "GroupX": (()=>GroupX)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/group.js [app-client] (ecmascript)");
;
const GroupX = (options = {})=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Group"])(Object.assign(Object.assign({}, options), {
        channels: [
            'x',
            'color',
            'series'
        ]
    }));
};
GroupX.props = {}; //# sourceMappingURL=groupX.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/groupY.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "GroupY": (()=>GroupY)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/group.js [app-client] (ecmascript)");
;
const GroupY = (options = {})=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Group"])(Object.assign(Object.assign({}, options), {
        channels: [
            'y',
            'color',
            'series'
        ]
    }));
};
GroupY.props = {}; //# sourceMappingURL=groupY.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/groupColor.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "GroupColor": (()=>GroupColor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/group.js [app-client] (ecmascript)");
;
const GroupColor = (options = {})=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Group"])(Object.assign(Object.assign({}, options), {
        channels: [
            'color'
        ]
    }));
};
GroupColor.props = {}; //# sourceMappingURL=groupColor.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/sort.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Sort": (()=>Sort)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$mean$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__mean$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/mean.js [app-client] (ecmascript) <export default as mean>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$median$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__median$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/median.js [app-client] (ecmascript) <export default as median>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/sum.js [app-client] (ecmascript) <export default as sum>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/min.js [app-client] (ecmascript) <export default as min>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/max.js [app-client] (ecmascript) <export default as max>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sort$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sort$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/sort.js [app-client] (ecmascript) <export default as sort>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$groupSort$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__groupSort$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/groupSort.js [app-client] (ecmascript) <export default as groupSort>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
;
;
function createReducer(channel, options, encode) {
    const { by = channel, reducer = 'max' } = options;
    const [V] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, by);
    if (typeof reducer === 'function') return (GI)=>reducer(GI, V);
    if (reducer === 'max') return (GI)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__["max"])(GI, (i)=>+V[i]);
    if (reducer === 'min') return (GI)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__["min"])(GI, (i)=>+V[i]);
    if (reducer === 'sum') return (GI)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__["sum"])(GI, (i)=>+V[i]);
    if (reducer === 'median') return (GI)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$median$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__median$3e$__["median"])(GI, (i)=>+V[i]);
    if (reducer === 'mean') return (GI)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$mean$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__mean$3e$__["mean"])(GI, (i)=>+V[i]);
    if (reducer === 'first') return (GI)=>V[GI[0]];
    if (reducer === 'last') return (GI)=>V[GI[GI.length - 1]];
    throw new Error(`Unknown reducer: ${reducer}`);
}
function sortQuantitative(I, mark, options) {
    const { reverse, channel } = options;
    const { encode } = mark;
    const [V] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, channel);
    const sortedI = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sort$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sort$3e$__["sort"])(I, (i)=>V[i]);
    if (reverse) sortedI.reverse();
    // const s = typeof slice === 'number' ? [0, slice] : slice;
    return [
        sortedI,
        mark
    ];
}
// If domain is specified, only sort data in the domain.
function filterIndex(I, values, specifiedDomain) {
    if (!Array.isArray(specifiedDomain)) return I;
    const domain = new Set(specifiedDomain);
    return I.filter((i)=>domain.has(values[i]));
}
function sortOrdinal(I, mark, options) {
    var _a;
    const { reverse, slice, channel } = options, rest = __rest(options, [
        "reverse",
        "slice",
        "channel"
    ]);
    const { encode, scale = {} } = mark;
    const domain = (_a = scale[channel]) === null || _a === void 0 ? void 0 : _a.domain;
    const [T] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, channel);
    const normalizeReducer = createReducer(channel, rest, encode);
    const SI = filterIndex(I, T, domain);
    const sortedDomain = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$groupSort$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__groupSort$3e$__["groupSort"])(SI, normalizeReducer, (i)=>T[i]);
    if (reverse) sortedDomain.reverse();
    const s = typeof slice === 'number' ? [
        0,
        slice
    ] : slice;
    const slicedDomain = slice ? sortedDomain.slice(...s) : sortedDomain;
    return [
        I,
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])(mark, {
            scale: {
                [channel]: {
                    domain: slicedDomain
                }
            }
        })
    ];
}
const Sort = (options = {})=>{
    const { reverse = false, slice, channel, ordinal = true } = options, rest = __rest(options, [
        "reverse",
        "slice",
        "channel",
        "ordinal"
    ]);
    return (I, mark)=>{
        if (!ordinal) {
            return sortQuantitative(I, mark, Object.assign({
                reverse,
                slice,
                channel
            }, rest));
        }
        return sortOrdinal(I, mark, Object.assign({
            reverse,
            slice,
            channel
        }, rest));
    };
};
Sort.props = {}; //# sourceMappingURL=sort.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/sortX.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SortX": (()=>SortX)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$sort$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/sort.js [app-client] (ecmascript)");
;
const SortX = (options = {})=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$sort$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Sort"])(Object.assign(Object.assign({}, options), {
        channel: 'x'
    }));
};
SortX.props = {}; //# sourceMappingURL=sortX.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/sortY.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SortY": (()=>SortY)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$sort$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/sort.js [app-client] (ecmascript)");
;
const SortY = (options = {})=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$sort$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Sort"])(Object.assign(Object.assign({}, options), {
        channel: 'y'
    }));
};
SortY.props = {}; //# sourceMappingURL=sortY.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/sortColor.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SortColor": (()=>SortColor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$sort$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/sort.js [app-client] (ecmascript)");
;
const SortColor = (options = {})=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$sort$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Sort"])(Object.assign(Object.assign({}, options), {
        channel: 'color'
    }));
};
SortColor.props = {}; //# sourceMappingURL=sortColor.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/flexX.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "FlexX": (()=>FlexX)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/d3-array/src/group.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/sum.js [app-client] (ecmascript) <export default as sum>");
;
;
;
function valueOf(data, field) {
    if (typeof field === 'string') return data.map((d)=>d[field]);
    return data.map(field);
}
function createReducer(reducer, V) {
    if (typeof reducer === 'function') return (GI)=>reducer(GI, V);
    if (reducer === 'sum') return (GI)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$sum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__sum$3e$__["sum"])(GI, (i)=>+V[i]);
    throw new Error(`Unknown reducer: ${reducer}`);
}
const FlexX = (options = {})=>{
    const { field, channel = 'y', reducer = 'sum' } = options;
    return (I, mark)=>{
        const { data, encode } = mark;
        const [x] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, 'x');
        const V = field ? valueOf(data, field) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, channel)[0];
        const reducerFunction = createReducer(reducer, V);
        const flex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rollups"])(I, reducerFunction, (i)=>x[i]).map((d)=>d[1]);
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                scale: {
                    x: {
                        flex
                    }
                }
            })
        ];
    };
};
FlexX.props = {}; //# sourceMappingURL=flexX.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/pack.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Pack": (()=>Pack)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/vector.js [app-client] (ecmascript)");
;
;
function pack(options) {
    const { padding = 0, direction = 'col' } = options;
    return (P, count, layout)=>{
        const pcount = P.length;
        if (pcount === 0) return [];
        // col * row >= count
        // row is close to col * aspect, so
        // col * (col * aspect) >= count
        const { innerWidth, innerHeight } = layout;
        const aspect = innerHeight / innerWidth;
        let col = Math.ceil(Math.sqrt(count / aspect));
        // Increase col to avoid total height of packed shape
        // being large than height of bbox.
        let size = innerWidth / col;
        let row = Math.ceil(count / col);
        let h0 = row * size;
        while(h0 > innerHeight){
            col = col + 1;
            size = innerWidth / col;
            row = Math.ceil(count / col);
            h0 = row * size;
        }
        // Some offset to increase the space usage.
        const space = innerHeight - row * size;
        const intervalY = row <= 1 ? 0 : space / (row - 1);
        const [offsetX, offsetY] = row <= 1 ? [
            (innerWidth - pcount * size) / (pcount - 1),
            (innerHeight - size) / 2
        ] : [
            0,
            0
        ];
        return P.map((points, m)=>{
            const [x, y, width, height] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["calcBBox"])(points);
            const i = direction === 'col' ? m % col : Math.floor(m / row);
            const j = direction === 'col' ? Math.floor(m / col) : m % row;
            const newX = i * size;
            const newY = (row - j - 1) * size + space;
            const sx = (size - padding) / width;
            const sy = (size - padding) / height;
            // Translate the shape and mark to make sure the center of
            // shape is overlap before and after scale transformation.
            const tx = newX - x + offsetX * i + 1 / 2 * padding;
            const ty = newY - y - intervalY * j - offsetY + 1 / 2 * padding;
            return `translate(${tx}, ${ty}) scale(${sx}, ${sy})`;
        });
    };
}
const Pack = (options)=>{
    return (I, mark)=>{
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                modifier: pack(options),
                axis: false
            })
        ];
    };
};
Pack.props = {}; //# sourceMappingURL=pack.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/utils/lttb.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/**
 * Sample data with lttb(Largest-Triangle-Three-Buckets) algo (https://github.com/pingec/downsample-lttb).
 * Return the sampled index array.
 */ __turbopack_esm__({
    "lttb": (()=>lttb)
});
function lttb(I, X, Y, thresholds) {
    const length = I.length;
    if (thresholds >= length || thresholds === 0) {
        return I;
    }
    const x = (i)=>X[I[i]] * 1;
    const y = (i)=>Y[I[i]] * 1;
    const sampled = [];
    // Bucket size. Leave room for start and end data points.
    const every = (length - 2) / (thresholds - 2);
    let a = 0; // Initially a is the first point in the triangle.
    let maxArea;
    let area;
    let nextA;
    sampled.push(a); // Always add the first point.
    for(let i = 0; i < thresholds - 2; i++){
        // Calculate point average for next bucket (containing c).
        let avgX = 0;
        let avgY = 0;
        let start = Math.floor((i + 1) * every) + 1;
        let end = Math.floor((i + 2) * every) + 1;
        end = Math.min(end, length);
        const size = end - start;
        for(; start < end; start++){
            avgX += x(start);
            avgY += y(start);
        }
        avgX /= size;
        avgY /= size;
        // Get the range for this bucket.
        let frameStart = Math.floor((i + 0) * every) + 1;
        const frameEnd = Math.floor((i + 1) * every) + 1;
        // Point a.
        const pointA = [
            x(a),
            y(a)
        ];
        maxArea = area = -1;
        for(; frameStart < frameEnd; frameStart++){
            // Calculate triangle area over three buckets.
            area = Math.abs((pointA[0] - avgX) * (x(frameStart) - pointA[1]) - (pointA[0] - y(frameStart)) * (avgY - pointA[0])) * 0.5;
            if (area > maxArea) {
                maxArea = area;
                nextA = frameStart; // Next a is this b.
            }
        }
        sampled.push(nextA); // Pick this point from the bucket.
        a = nextA; // This a is the next a (chosen b).
    }
    sampled.push(length - 1); // Always add last.
    return sampled.map((a)=>I[a]);
} //# sourceMappingURL=lttb.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/sample.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// @ts-ignore medianIndex exist in d3-array@3.2.0, but @types/d3-array Expired.
__turbopack_esm__({
    "Sample": (()=>Sample)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/order.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$minIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__minIndex$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/minIndex.js [app-client] (ecmascript) <export default as minIndex>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$maxIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__maxIndex$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/maxIndex.js [app-client] (ecmascript) <export default as maxIndex>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$median$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/d3-array/src/median.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$lttb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/lttb.js [app-client] (ecmascript)");
;
;
;
;
function normalizeSample(strategy) {
    if (typeof strategy === 'function') return strategy;
    if (strategy === 'lttb') return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$lttb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["lttb"];
    const strategies = {
        first: (f)=>[
                f[0]
            ],
        last: (f)=>[
                f[f.length - 1]
            ],
        min: (f, X, Y)=>[
                f[(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$minIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__minIndex$3e$__["minIndex"])(f, (i)=>Y[i])]
            ],
        max: (f, X, Y)=>[
                f[(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$maxIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__maxIndex$3e$__["maxIndex"])(f, (i)=>Y[i])]
            ],
        median: (f, X, Y)=>[
                f[(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$median$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["medianIndex"])(f, (i)=>Y[i])]
            ]
    };
    const sampleFunction = strategies[strategy] || strategies.median;
    return (I, X, Y, thresholds)=>{
        // Sepreate group to frames, then sample each frame.
        // Keep more data as possible.
        const frameSize = Math.max(1, Math.floor(I.length / thresholds));
        const frames = getFrames(I, frameSize);
        return frames.flatMap((frame)=>sampleFunction(frame, X, Y));
    };
}
/**
 * Split the array into frame with each frameSize.
 */ function getFrames(I, frameSize) {
    const size = I.length;
    const frames = [];
    let i = 0;
    while(i < size){
        frames.push(I.slice(i, i += frameSize));
    }
    return frames;
}
const Sample = (options = {})=>{
    const { strategy = 'median', thresholds = 2000, groupBy = [
        'series',
        'color'
    ] } = options;
    const sampleFunction = normalizeSample(strategy);
    return (I, mark)=>{
        const { encode } = mark;
        const groups = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$order$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createGroups"])(groupBy, I, mark);
        const [X] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, 'x');
        const [Y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, 'y');
        return [
            groups.flatMap((g)=>sampleFunction(g, X, Y, thresholds)),
            mark
        ];
    };
};
Sample.props = {}; //# sourceMappingURL=sample.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/filter.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Filter": (()=>Filter)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
;
;
;
function normalizeValue(value) {
    if (typeof value === 'object') return [
        value.value,
        value.ordinal
    ];
    else return [
        value,
        true
    ];
}
function filterWhenNoElements(mark) {
    var _a;
    const { encode } = mark;
    // keep y-axis
    const noElementMark = Object.assign(Object.assign({}, mark), {
        encode: Object.assign(Object.assign({}, mark.encode), {
            y: Object.assign(Object.assign({}, mark.encode.y), {
                value: []
            })
        })
    });
    const targetField = (_a = encode === null || encode === void 0 ? void 0 : encode.color) === null || _a === void 0 ? void 0 : _a.field;
    if (!encode || !targetField) {
        return noElementMark;
    }
    // 获取color的筛选源
    let filterObject;
    for (const [key, v] of Object.entries(encode)){
        if ((key === 'x' || key === 'y') && v.field === targetField) {
            filterObject = Object.assign(Object.assign({}, filterObject), {
                [key]: Object.assign(Object.assign({}, v), {
                    value: []
                })
            });
        }
    }
    if (!filterObject) {
        return noElementMark;
    }
    return Object.assign(Object.assign({}, mark), {
        encode: Object.assign(Object.assign({}, mark.encode), filterObject)
    });
}
const Filter = (options = {})=>{
    return (I, mark)=>{
        const { encode, data } = mark;
        const filters = Object.entries(options).map(([key, v])=>{
            const [V] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, key);
            // Skip empty channel.
            if (!V) return null;
            const [value, ordinal = true] = normalizeValue(v);
            if (typeof value === 'function') return (i)=>value(V[i]);
            if (ordinal) {
                const expectedValues = Array.isArray(value) ? value : [
                    value
                ];
                // Skip empty expected values.
                if (expectedValues.length === 0) return null;
                return (i)=>expectedValues.includes(V[i]);
            } else {
                const [start, end] = value;
                return (i)=>V[i] >= start && V[i] <= end;
            }
        }).filter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defined"]);
        // Filter index and channels.
        const totalFilter = (i)=>filters.every((f)=>f(i));
        const FI = I.filter(totalFilter);
        const newIndex = FI.map((_, i)=>i);
        if (filters.length === 0) {
            const targetMark = filterWhenNoElements(mark);
            return [
                I,
                targetMark
            ];
        }
        const newEncodes = Object.entries(encode).map(([key, encode])=>{
            return [
                key,
                Object.assign(Object.assign({}, encode), {
                    value: newIndex.map((i)=>encode.value[FI[i]]).filter((v)=>v !== undefined)
                })
            ];
        });
        return [
            newIndex,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                encode: Object.fromEntries(newEncodes),
                // Filter data for tooltip item.
                data: FI.map((i)=>data[i])
            })
        ];
    };
};
Filter.props = {}; //# sourceMappingURL=filter.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeZeroY1.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeZeroY1": (()=>MaybeZeroY1)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
;
;
const MaybeZeroY1 = ()=>{
    return (I, mark)=>{
        const { encode } = mark;
        const { y1 } = encode;
        if (y1 !== undefined) return [
            I,
            mark
        ];
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                encode: {
                    y1: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["inferredColumn"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["constant"])(I, 0))
                }
            })
        ];
    };
};
MaybeZeroY1.props = {}; //# sourceMappingURL=maybeZeroY1.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeZeroX.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeZeroX": (()=>MaybeZeroX)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
;
;
const MaybeZeroX = ()=>{
    return (I, mark)=>{
        const { encode } = mark;
        const { x } = encode;
        if (x !== undefined) return [
            I,
            mark
        ];
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                encode: {
                    x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["inferredColumn"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["constant"])(I, 0))
                },
                scale: {
                    x: {
                        guide: null
                    }
                }
            })
        ];
    };
};
MaybeZeroX.props = {}; //# sourceMappingURL=maybeZeroX.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeGradient.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeGradient": (()=>MaybeGradient)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
;
;
const MaybeGradient = ()=>{
    return (I, mark)=>{
        const { style = {}, encode } = mark;
        const { series } = encode;
        const { gradient } = style;
        if (!gradient || series) return [
            I,
            mark
        ];
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                encode: {
                    series: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["visualColumn"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["constant"])(I, undefined))
                }
            })
        ];
    };
};
MaybeGradient.props = {}; //# sourceMappingURL=maybeGradient.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeSeries.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeSeries": (()=>MaybeSeries)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
;
;
const MaybeSeries = ()=>{
    return (I, mark)=>{
        const { encode } = mark;
        const { series, color } = encode;
        if (series !== undefined || color === undefined) return [
            I,
            mark
        ];
        const [C, fc] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, 'color');
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                encode: {
                    series: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(C, fc)
                }
            })
        ];
    };
};
MaybeSeries.props = {}; //# sourceMappingURL=maybeSeries.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeZeroY.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeZeroY": (()=>MaybeZeroY)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
;
;
const MaybeZeroY = ()=>{
    return (I, mark)=>{
        const { encode } = mark;
        const { y } = encode;
        if (y !== undefined) return [
            I,
            mark
        ];
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                encode: {
                    y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["inferredColumn"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["constant"])(I, 0))
                },
                scale: {
                    y: {
                        guide: null
                    }
                }
            })
        ];
    };
};
MaybeZeroY.props = {}; //# sourceMappingURL=maybeZeroY.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeSize.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeSize": (()=>MaybeSize)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
;
;
const MaybeSize = ()=>{
    return (I, mark)=>{
        const { encode } = mark;
        const { size } = encode;
        if (size !== undefined) return [
            I,
            mark
        ];
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                encode: {
                    size: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["visualColumn"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["constant"])(I, 3))
                }
            })
        ];
    };
};
MaybeSize.props = {}; //# sourceMappingURL=maybeSize.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeTuple.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeTuple": (()=>MaybeTuple)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
;
;
const MaybeTuple = ()=>{
    return (I, mark)=>{
        const { data } = mark;
        if (!Array.isArray(data) || data.some(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])) return [
            I,
            mark
        ];
        const position = Array.isArray(data[0]) ? data : [
            data
        ];
        const X = position.map((d)=>d[0]);
        const Y = position.map((d)=>d[1]);
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                encode: {
                    x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(X),
                    y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(Y)
                }
            })
        ];
    };
};
MaybeTuple.props = {}; //# sourceMappingURL=maybeTuple.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeVisualPosition.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeVisualPosition": (()=>MaybeVisualPosition)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
;
const MaybeVisualPosition = ()=>{
    return (I, mark)=>{
        const { data, style = {} } = mark, restMark = __rest(mark, [
            "data",
            "style"
        ]);
        const { x: x0, y: y0 } = style, rest = __rest(style, [
            "x",
            "y"
        ]);
        if (x0 == undefined || y0 == undefined) return [
            I,
            mark
        ];
        const x = x0 || 0;
        const y = y0 || 0;
        return [
            [
                0
            ],
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, restMark, {
                data: [
                    0
                ],
                cartesian: true,
                encode: {
                    x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])([
                        x
                    ]),
                    y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])([
                        y
                    ])
                },
                scale: {
                    x: {
                        type: 'identity',
                        independent: true,
                        guide: null
                    },
                    y: {
                        type: 'identity',
                        independent: true,
                        guide: null
                    }
                },
                style: rest
            })
        ];
    };
};
MaybeVisualPosition.props = {}; //# sourceMappingURL=maybeVisualPosition.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeZeroPadding.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeZeroPadding": (()=>MaybeZeroPadding)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
;
const MaybeZeroPadding = ()=>{
    return (I, mark)=>{
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({
                scale: {
                    x: {
                        padding: 0
                    },
                    y: {
                        padding: 0
                    }
                }
            }, mark)
        ];
    };
};
MaybeZeroPadding.props = {}; //# sourceMappingURL=maybeZeroPadding.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeIdentityY.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeIdentityY": (()=>MaybeIdentityY)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
;
;
const MaybeIdentityY = ()=>{
    return (I, mark)=>{
        const { encode } = mark;
        const { y1 } = encode;
        if (y1) return [
            I,
            mark
        ];
        const [Y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, 'y');
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                encode: {
                    y1: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])([
                        ...Y
                    ])
                }
            })
        ];
    };
};
MaybeIdentityY.props = {}; //# sourceMappingURL=maybeIdentityY.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeIdentityX.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeIdentityX": (()=>MaybeIdentityX)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
;
;
const MaybeIdentityX = ()=>{
    return (I, mark)=>{
        const { encode } = mark;
        const { x1 } = encode;
        if (x1) return [
            I,
            mark
        ];
        const [X] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["columnOf"])(encode, 'x');
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                encode: {
                    x1: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])([
                        ...X
                    ])
                }
            })
        ];
    };
};
MaybeIdentityX.props = {}; //# sourceMappingURL=maybeIdentityX.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeTupleX.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeTupleX": (()=>MaybeTupleX)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
;
;
const MaybeTupleX = ()=>{
    return (I, mark)=>{
        const { data } = mark;
        if (!Array.isArray(data) || data.some(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])) return [
            I,
            mark
        ];
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                encode: {
                    x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(data)
                }
            })
        ];
    };
};
MaybeTupleX.props = {}; //# sourceMappingURL=maybeTupleX.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeTupleY.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeTupleY": (()=>MaybeTupleY)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
;
;
const MaybeTupleY = ()=>{
    return (I, mark)=>{
        const { data } = mark;
        if (!Array.isArray(data) || data.some(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])) return [
            I,
            mark
        ];
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                encode: {
                    y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(data)
                }
            })
        ];
    };
};
MaybeTupleY.props = {}; //# sourceMappingURL=maybeTupleY.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeDefaultX.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeDefaultX": (()=>MaybeDefaultX)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
;
;
const MaybeDefaultX = ()=>{
    return (I, mark)=>{
        const { data } = mark;
        if (Array.isArray(data) && (data.every(Array.isArray) || !data.some(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"]))) {
            const extractX = (data, index)=>Array.isArray(data[0]) ? data.map((item)=>item[index]) : [
                    data[index]
                ];
            return [
                I,
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                    encode: {
                        x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(extractX(data, 0)),
                        x1: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(extractX(data, 1))
                    }
                })
            ];
        }
        return [
            I,
            mark
        ];
    };
};
MaybeDefaultX.props = {}; //# sourceMappingURL=maybeDefaultX.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeDefaultY.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeDefaultY": (()=>MaybeDefaultY)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/utils/helper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
;
;
const MaybeDefaultY = ()=>{
    return (I, mark)=>{
        const { data } = mark;
        if (Array.isArray(data) && (data.every(Array.isArray) || !data.some(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"]))) {
            const extractY = (data, index)=>Array.isArray(data[0]) ? data.map((item)=>item[index]) : [
                    data[index]
                ];
            return [
                I,
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                    encode: {
                        y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(extractY(data, 0)),
                        y1: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$utils$2f$helper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["column"])(extractY(data, 1))
                    }
                })
            ];
        }
        return [
            I,
            mark
        ];
    };
};
MaybeDefaultY.props = {}; //# sourceMappingURL=maybeDefaultY.js.map
}}),
"[project]/node_modules/@antv/g2/esm/transform/maybeFunctionAttribute.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MaybeFunctionAttribute": (()=>MaybeFunctionAttribute)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-client] (ecmascript) <export default as deepMix>");
;
const MaybeFunctionAttribute = ()=>{
    return (I, mark)=>{
        const { style = {} } = mark;
        return [
            I,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, mark, {
                style: Object.assign(Object.assign({}, style), Object.fromEntries(Object.entries(style).filter(([, v])=>typeof v === 'function').map(([k, v])=>[
                        k,
                        ()=>v
                    ])))
            })
        ];
    };
};
MaybeFunctionAttribute.props = {}; //# sourceMappingURL=maybeFunctionAttribute.js.map
}}),
}]);

//# sourceMappingURL=node_modules_%40antv_g2_esm_transform_db8cb4._.js.map
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/duli/Desktop/js-project/CopyMax/src/app/home/G2.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect, useRef } from 'react';\nimport { Chart } from '@antv/g2';\n\n// 渲染条形图\nfunction renderChart(container: HTMLDivElement, color: string, formColor: string, toColor: string) {\n  const chart = new Chart({\n    container,\n    autoFit: true\n  });\n\n  // 准备数据\n  const data = [\n    { price: 1001, date: '2024-01-01' },\n    { price: 2020, date: '2024-01-02' },\n    { price: 3030, date: '2024-01-03' },\n    { price: 2200, date: '2024-01-04' },\n    { price: 1922, date: '2024-01-05' },\n    { price: 6060, date: '2024-01-06' },\n    { price: 3023, date: '2024-01-07' },\n    { price: 5440, date: '2024-01-08' },\n    { price: 6660, date: '2024-01-09' },\n    { price: 3900, date: '2024-01-10' },\n  ];\n\n  // 声明可视化\n  chart\n    .data(data) // 绑定数据\n    .area()\n    .encode('x', 'date')\n    .encode('y', 'price')\n    .encode('key', 'x')\n    .encode('shape', 'smooth') // 指定形状\n    .style('fill', `linear-gradient(-90deg, white 0%, ${toColor} 100%)`)\n    .style('stroke', color)\n    .style('strokeWidth', 1)\n    .animate('enter', {  type: 'pathIn', duration: 1000 }); // 指定更新动画的时间\n\n  // 渲染可视化\n  chart.render();\n  \n  chart.render();\n\n  return chart;\n}\n\n\ninterface Props {\n  className?: string\n  color: string\n  formColor: string\n  toColor: string\n}\n\nexport function G2Chart({ className, color, formColor, toColor }: Props) {\n  const container = useRef<HTMLDivElement>(null);\n  const chart = useRef<Chart>(null);\n\n  useEffect(() => {\n    if (!chart.current && container.current) {\n      console.log('renderChart', color, formColor, toColor)\n      chart.current = renderChart(container.current, color, formColor, toColor);\n    }\n  }, [color, formColor, toColor])\n\n  return (\n    <div ref={container} className={className}></div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,QAAQ;AACR,SAAS,YAAY,SAAyB,EAAE,KAAa,EAAE,SAAiB,EAAE,OAAe;IAC/F,MAAM,QAAQ,IAAI,4JAAA,CAAA,QAAK,CAAC;QACtB;QACA,SAAS;IACX;IAEA,OAAO;IACP,MAAM,OAAO;QACX;YAAE,OAAO;YAAM,MAAM;QAAa;QAClC;YAAE,OAAO;YAAM,MAAM;QAAa;QAClC;YAAE,OAAO;YAAM,MAAM;QAAa;QAClC;YAAE,OAAO;YAAM,MAAM;QAAa;QAClC;YAAE,OAAO;YAAM,MAAM;QAAa;QAClC;YAAE,OAAO;YAAM,MAAM;QAAa;QAClC;YAAE,OAAO;YAAM,MAAM;QAAa;QAClC;YAAE,OAAO;YAAM,MAAM;QAAa;QAClC;YAAE,OAAO;YAAM,MAAM;QAAa;QAClC;YAAE,OAAO;YAAM,MAAM;QAAa;KACnC;IAED,QAAQ;IACR,MACG,IAAI,CAAC,MAAM,OAAO;KAClB,IAAI,GACJ,MAAM,CAAC,KAAK,QACZ,MAAM,CAAC,KAAK,SACZ,MAAM,CAAC,OAAO,KACd,MAAM,CAAC,SAAS,UAAU,OAAO;KACjC,KAAK,CAAC,QAAQ,CAAC,kCAAkC,EAAE,QAAQ,MAAM,CAAC,EAClE,KAAK,CAAC,UAAU,OAChB,KAAK,CAAC,eAAe,GACrB,OAAO,CAAC,SAAS;QAAG,MAAM;QAAU,UAAU;IAAK,IAAI,YAAY;IAEtE,QAAQ;IACR,MAAM,MAAM;IAEZ,MAAM,MAAM;IAEZ,OAAO;AACT;AAUO,SAAS,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAS;IACrE,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IACzC,MAAM,QAAQ,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAS;IAE5B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,MAAM,OAAO,IAAI,UAAU,OAAO,EAAE;YACvC,QAAQ,GAAG,CAAC,eAAe,OAAO,WAAW;YAC7C,MAAM,OAAO,GAAG,YAAY,UAAU,OAAO,EAAE,OAAO,WAAW;QACnE;IACF,GAAG;QAAC;QAAO;QAAW;KAAQ;IAE9B,qBACE,8OAAC;QAAI,KAAK;QAAW,WAAW;;;;;;AAEpC"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}
module.exports = {

"[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "bandWidth": (()=>bandWidth),
    "baseAnnotationChannels": (()=>baseAnnotationChannels),
    "baseChannels": (()=>baseChannels),
    "baseGeometryChannels": (()=>baseGeometryChannels),
    "basePostInference": (()=>basePostInference),
    "basePreInference": (()=>basePreInference),
    "createBandOffset": (()=>createBandOffset),
    "field": (()=>field),
    "initializeData": (()=>initializeData),
    "p": (()=>p),
    "tooltip1d": (()=>tooltip1d),
    "tooltip2d": (()=>tooltip2d),
    "tooltip3d": (()=>tooltip3d),
    "tooltipXd": (()=>tooltipXd),
    "valueof": (()=>valueof),
    "visualMark": (()=>visualMark)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTitle$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeTitle.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTooltip$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeTooltip.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeKey$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeKey.js [app-ssr] (ecmascript)");
;
function baseChannels(options = {}) {
    const { shapes } = options;
    return [
        {
            name: 'color'
        },
        {
            name: 'opacity'
        },
        {
            name: 'shape',
            range: shapes
        },
        {
            name: 'enterType'
        },
        {
            name: 'enterDelay',
            scaleKey: 'enter'
        },
        {
            name: 'enterDuration',
            scaleKey: 'enter'
        },
        {
            name: 'enterEasing'
        },
        {
            name: 'key',
            scale: 'identity'
        },
        {
            name: 'groupKey',
            scale: 'identity'
        },
        {
            name: 'label',
            scale: 'identity'
        }
    ];
}
function baseGeometryChannels(options = {}) {
    return [
        ...baseChannels(options),
        {
            name: 'title',
            scale: 'identity'
        }
    ];
}
function tooltip3d() {
    return [
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTitle$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeTitle"],
            channel: 'color'
        },
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTooltip$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeTooltip"],
            channel: [
                'x',
                'y',
                'z'
            ]
        }
    ];
}
function tooltip2d() {
    return [
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTitle$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeTitle"],
            channel: 'color'
        },
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTooltip$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeTooltip"],
            channel: [
                'x',
                'y'
            ]
        }
    ];
}
function tooltip1d() {
    return [
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTitle$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeTitle"],
            channel: 'x'
        },
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTooltip$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeTooltip"],
            channel: [
                'y'
            ]
        }
    ];
}
function tooltipXd() {
    return [
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTitle$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeTitle"],
            channel: 'color'
        },
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTooltip$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeTooltip"],
            channel: [
                'position'
            ]
        }
    ];
}
function baseAnnotationChannels(options = {}) {
    return baseChannels(options);
}
function basePreInference() {
    return [
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeKey$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeKey"]
        }
    ];
}
function basePostInference() {
    return [];
}
function bandWidth(scale, x) {
    return scale.getBandWidth(scale.invert(x));
}
function createBandOffset(scale, value, options = {}) {
    const { x: X, y: Y, series: S } = value;
    const { x, y, series } = scale;
    const { style: { bandOffset = series ? 0 : 0.5, bandOffsetX = bandOffset, bandOffsetY = bandOffset } = {} } = options;
    const isBandX = !!(x === null || x === void 0 ? void 0 : x.getBandWidth);
    const isBandY = !!(y === null || y === void 0 ? void 0 : y.getBandWidth);
    const isSeries = !!(series === null || series === void 0 ? void 0 : series.getBandWidth);
    if (!isBandX && !isBandY) return (d)=>d;
    return (d, i)=>{
        const widthX = isBandX ? bandWidth(x, X[i]) : 0;
        const widthY = isBandY ? bandWidth(y, Y[i]) : 0;
        const f = ()=>(bandWidth(series, S[i]) / 2 + +S[i]) * widthX;
        const offset = isSeries && S ? f() : 0;
        const [x0, y0] = d;
        return [
            x0 + bandOffsetX * widthX + offset,
            y0 + bandOffsetY * widthY
        ];
    };
}
function p(d) {
    return parseFloat(d) / 100;
}
function visualMark(index, scale, value, coordinate) {
    const { x: X, y: Y } = value;
    const { innerWidth, innerHeight } = coordinate.getOptions();
    const P = Array.from(index, (i)=>{
        const x0 = X[i];
        const y0 = Y[i];
        const x = typeof x0 === 'string' ? p(x0) * innerWidth : +x0;
        const y = typeof y0 === 'string' ? p(y0) * innerHeight : +y0;
        return [
            [
                x,
                y
            ]
        ];
    });
    return [
        index,
        P
    ];
}
function field(encode) {
    return typeof encode === 'function' ? encode : (d)=>d[encode];
}
function valueof(data, encode) {
    return Array.from(data, field(encode));
}
function initializeData(data, encode) {
    const { source = (d)=>d.source, target = (d)=>d.target, value = (d)=>d.value } = encode;
    const { links, nodes } = data;
    const LS = valueof(links, source);
    const LT = valueof(links, target);
    const LV = valueof(links, value);
    return {
        links: links.map((_, i)=>({
                target: LT[i],
                source: LS[i],
                value: LV[i]
            })),
        nodes: nodes || Array.from(new Set([
            ...LS,
            ...LT
        ]), (key)=>({
                key
            }))
    };
} //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/forceGraph.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ForceGraph": (()=>ForceGraph)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/helper.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-ssr] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/mark.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$force$2f$src$2f$manyBody$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__forceManyBody$3e$__ = __turbopack_import__("[project]/node_modules/d3-force/src/manyBody.js [app-ssr] (ecmascript) <export default as forceManyBody>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$force$2f$src$2f$link$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__forceLink$3e$__ = __turbopack_import__("[project]/node_modules/d3-force/src/link.js [app-ssr] (ecmascript) <export default as forceLink>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$force$2f$src$2f$simulation$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__forceSimulation$3e$__ = __turbopack_import__("[project]/node_modules/d3-force/src/simulation.js [app-ssr] (ecmascript) <export default as forceSimulation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$force$2f$src$2f$x$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__forceX$3e$__ = __turbopack_import__("[project]/node_modules/d3-force/src/x.js [app-ssr] (ecmascript) <export default as forceX>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$force$2f$src$2f$y$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__forceY$3e$__ = __turbopack_import__("[project]/node_modules/d3-force/src/y.js [app-ssr] (ecmascript) <export default as forceY>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$force$2f$src$2f$center$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__forceCenter$3e$__ = __turbopack_import__("[project]/node_modules/d3-force/src/center.js [app-ssr] (ecmascript) <export default as forceCenter>");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
;
;
;
;
const DEFAULT_LAYOUT_OPTIONS = {
    joint: true
};
const DEFAULT_LINK_OPTIONS = {
    type: 'link',
    axis: false,
    legend: false,
    encode: {
        x: [
            (d)=>d.source.x,
            (d)=>d.target.x
        ],
        y: [
            (d)=>d.source.y,
            (d)=>d.target.y
        ]
    },
    style: {
        stroke: '#999',
        strokeOpacity: 0.6
    }
};
const DEFAULT_NODE_OPTIONS = {
    type: 'point',
    axis: false,
    legend: false,
    encode: {
        x: 'x',
        y: 'y',
        size: 5,
        color: 'group',
        shape: 'point'
    },
    style: {
        stroke: '#fff'
    }
};
const DEFAULT_LABEL_OPTIONS = {
    text: ''
};
function dataTransform(data, layout, encode) {
    const { nodes, links } = data;
    const { joint, nodeStrength, linkStrength } = layout;
    const { nodeKey = (d)=>d.id, linkKey = (d)=>d.id } = encode;
    const nodeForce = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$force$2f$src$2f$manyBody$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__forceManyBody$3e$__["forceManyBody"])();
    const linkForce = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$force$2f$src$2f$link$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__forceLink$3e$__["forceLink"])(links).id((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["field"])(linkKey));
    typeof nodeStrength === 'function' && nodeForce.strength(nodeStrength);
    typeof linkStrength === 'function' && linkForce.strength(linkStrength);
    const simulation = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$force$2f$src$2f$simulation$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__forceSimulation$3e$__["forceSimulation"])(nodes).force('link', linkForce).force('charge', nodeForce);
    joint ? simulation.force('center', (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$force$2f$src$2f$center$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__forceCenter$3e$__["forceCenter"])()) : simulation.force('x', (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$force$2f$src$2f$x$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__forceX$3e$__["forceX"])()).force('y', (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$force$2f$src$2f$y$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__forceY$3e$__["forceY"])());
    simulation.stop();
    const n = Math.ceil(Math.log(simulation.alphaMin()) / Math.log(1 - simulation.alphaDecay()));
    for(let i = 0; i < n; i++)simulation.tick();
    return {
        nodesData: nodes,
        linksData: links
    };
}
const ForceGraph = (options)=>{
    const { data, encode: e = {}, scale, style = {}, layout = {}, nodeLabels = [], linkLabels = [], animate = {}, tooltip = {} } = options;
    const { nodeKey = (d)=>d.id, linkKey = (d)=>d.id } = e, restEncode = __rest(e, [
        "nodeKey",
        "linkKey"
    ]);
    const encode = Object.assign({
        nodeKey,
        linkKey
    }, restEncode);
    const nodeEncode = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(encode, 'node');
    const linkEncode = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(encode, 'link');
    const { links, nodes } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["initializeData"])(data, encode);
    const { nodesData, linksData } = dataTransform({
        links,
        nodes
    }, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, DEFAULT_LAYOUT_OPTIONS, layout), encode);
    const linkTooltip = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subTooltip"])(tooltip, 'link', {
        items: [
            (d)=>({
                    name: 'source',
                    value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["field"])(linkKey)(d.source)
                }),
            (d)=>({
                    name: 'target',
                    value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["field"])(linkKey)(d.target)
                })
        ]
    });
    const nodeTooltip = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subTooltip"])(tooltip, 'node', {
        items: [
            (d)=>({
                    name: 'key',
                    value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["field"])(nodeKey)(d)
                })
        ]
    }, true);
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, DEFAULT_LINK_OPTIONS, {
            data: linksData,
            encode: linkEncode,
            labels: linkLabels,
            style: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'link'),
            tooltip: linkTooltip,
            animate: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeAnimation"])(animate, 'link')
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, DEFAULT_NODE_OPTIONS, {
            data: nodesData,
            encode: Object.assign({}, nodeEncode),
            scale,
            style: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'node'),
            tooltip: nodeTooltip,
            labels: [
                Object.assign(Object.assign({}, DEFAULT_LABEL_OPTIONS), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'label')),
                ...nodeLabels
            ],
            animate: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeAnimation"])(animate, 'link')
        })
    ];
};
ForceGraph.props = {}; //# sourceMappingURL=forceGraph.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/tree.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Tree": (()=>Tree)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$data$2f$tree$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/data/tree.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/mark.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-ssr] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/helper.js [app-ssr] (ecmascript)");
;
;
;
;
const DEFAULT_LAYOUT_OPTIONS = {
    sortBy: (a, b)=>b.value - a.value
};
const DEFAULT_NODE_OPTIONS = {
    axis: false,
    legend: false,
    type: 'point',
    encode: {
        x: 'x',
        y: 'y',
        size: 2,
        shape: 'point'
    }
};
const DEFAULT_LINK_OPTIONS = {
    type: 'link',
    encode: {
        x: 'x',
        y: 'y',
        shape: 'smooth'
    }
};
const DEFAULT_LABEL_OPTIONS = {
    text: '',
    fontSize: 10
};
const Tree = (options)=>{
    const { data, encode = {}, scale = {}, style = {}, layout = {}, nodeLabels = [], linkLabels = [], animate = {}, tooltip = {} } = options;
    const valueEncode = encode === null || encode === void 0 ? void 0 : encode.value;
    const { nodes, edges } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$data$2f$tree$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Tree"])(Object.assign(Object.assign(Object.assign({}, DEFAULT_LAYOUT_OPTIONS), layout), {
        field: valueEncode
    }))(data);
    const nodeTooltip = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subTooltip"])(tooltip, 'node', {
        title: 'name',
        items: [
            'value'
        ]
    }, true);
    const linkTooltip = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subTooltip"])(tooltip, 'link', {
        title: '',
        items: [
            (d)=>({
                    name: 'source',
                    value: d.source.name
                }),
            (d)=>({
                    name: 'target',
                    value: d.target.name
                })
        ]
    });
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, DEFAULT_LINK_OPTIONS, {
            data: edges,
            encode: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(encode, 'link'),
            scale: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(scale, 'link'),
            labels: linkLabels,
            style: Object.assign({
                stroke: '#999'
            }, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'link')),
            tooltip: linkTooltip,
            animate: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeAnimation"])(animate, 'link')
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, DEFAULT_NODE_OPTIONS, {
            data: nodes,
            scale: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(scale, 'node'),
            encode: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(encode, 'node'),
            labels: [
                Object.assign(Object.assign({}, DEFAULT_LABEL_OPTIONS), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'label')),
                ...nodeLabels
            ],
            style: Object.assign({}, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'node')),
            tooltip: nodeTooltip,
            animate: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeAnimation"])(animate, 'node')
        })
    ];
};
Tree.props = {}; //# sourceMappingURL=tree.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/pack.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Pack": (()=>Pack)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$is$2d$array$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__isArray$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/is-array.js [app-ssr] (ecmascript) <export default as isArray>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$hierarchy$2f$src$2f$hierarchy$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__hierarchy$3e$__ = __turbopack_import__("[project]/node_modules/d3-hierarchy/src/hierarchy/index.js [app-ssr] (ecmascript) <export default as hierarchy>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$hierarchy$2f$src$2f$stratify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__stratify$3e$__ = __turbopack_import__("[project]/node_modules/d3-hierarchy/src/stratify.js [app-ssr] (ecmascript) <export default as stratify>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$hierarchy$2f$src$2f$pack$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__pack$3e$__ = __turbopack_import__("[project]/node_modules/d3-hierarchy/src/pack/index.js [app-ssr] (ecmascript) <export default as pack>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-ssr] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/helper.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/mark.js [app-ssr] (ecmascript)");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
;
;
;
;
const GET_DEFAULT_LAYOUT_OPTIONS = (width, height)=>({
        size: [
            width,
            height
        ],
        padding: 0,
        sort: (a, b)=>b.value - a.value
    });
const GET_DEFAULT_OPTIONS = (width, height, encode)=>({
        type: 'point',
        axis: false,
        legend: false,
        scale: {
            x: {
                domain: [
                    0,
                    width
                ]
            },
            y: {
                domain: [
                    0,
                    height
                ]
            },
            size: {
                type: 'identity'
            }
        },
        encode: {
            x: 'x',
            y: 'y',
            size: 'r',
            shape: 'point'
        },
        style: {
            fill: !encode.color ? (d)=>d.height === 0 ? '#ddd' : '#fff' : undefined,
            stroke: !encode.color ? (d)=>d.height === 0 ? '' : '#000' : undefined
        }
    });
const DEFAULT_LABEL_OPTIONS = {
    text: '',
    position: 'inside',
    textOverflow: 'clip',
    wordWrap: true,
    maxLines: 1,
    wordWrapWidth: (d)=>d.r * 2
};
const DEFAULT_TOOLTIP_OPTIONS = {
    title: (d)=>d.data.name,
    items: [
        {
            field: 'value'
        }
    ]
};
const dataTransform = (data, layout, encode)=>{
    const { value } = encode;
    const root = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$is$2d$array$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__isArray$3e$__["isArray"])(data) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$hierarchy$2f$src$2f$stratify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__stratify$3e$__["stratify"])().path(layout.path)(data) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$hierarchy$2f$src$2f$hierarchy$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__hierarchy$3e$__["hierarchy"])(data);
    value ? root.sum((d)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["field"])(value)(d)).sort(layout.sort) : root.count();
    // @ts-ignore
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$hierarchy$2f$src$2f$pack$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__pack$3e$__["pack"])().size(layout.size).padding(layout.padding)(root);
    return root.descendants();
};
const Pack = (markOptions, context)=>{
    const { width, height } = context;
    const { data, encode = {}, scale = {}, style = {}, layout = {}, labels = [], tooltip = {} } = markOptions, resOptions = __rest(markOptions, [
        "data",
        "encode",
        "scale",
        "style",
        "layout",
        "labels",
        "tooltip"
    ]);
    const DEFAULT_OPTIONS = GET_DEFAULT_OPTIONS(width, height, encode);
    const transformedData = dataTransform(data, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, GET_DEFAULT_LAYOUT_OPTIONS(width, height), layout), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, DEFAULT_OPTIONS['encode'], encode));
    const labelStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'label');
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, DEFAULT_OPTIONS, Object.assign(Object.assign({
        data: transformedData,
        encode,
        scale,
        style,
        labels: [
            Object.assign(Object.assign({}, DEFAULT_LABEL_OPTIONS), labelStyle),
            ...labels
        ]
    }, resOptions), {
        tooltip: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeTooltip"])(tooltip, DEFAULT_TOOLTIP_OPTIONS),
        axis: false
    }));
};
Pack.props = {}; //# sourceMappingURL=pack.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/sankey.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Sankey": (()=>Sankey)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/helper.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$data$2f$sankey$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/data/sankey.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/mark.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-ssr] (ecmascript) <export default as deepMix>");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
;
;
;
;
const DEFAULT_LAYOUT_OPTIONS = {
    nodeId: (d)=>d.key,
    nodeWidth: 0.02,
    nodePadding: 0.02
};
const DEFAULT_NODE_OPTIONS = {
    type: 'polygon',
    axis: false,
    legend: false,
    encode: {
        shape: 'polygon',
        x: 'x',
        y: 'y'
    },
    scale: {
        x: {
            type: 'identity'
        },
        y: {
            type: 'identity'
        }
    },
    style: {
        stroke: '#000'
    }
};
const DEFAULT_LINK_OPTIONS = {
    type: 'polygon',
    axis: false,
    legend: false,
    encode: {
        shape: 'ribbon',
        x: 'x',
        y: 'y'
    },
    style: {
        fillOpacity: 0.5,
        stroke: undefined
    }
};
const DEFAULT_LABEL_OPTIONS = {
    textAlign: (d)=>d.x[0] < 0.5 ? 'start' : 'end',
    position: (d)=>d.x[0] < 0.5 ? 'right' : 'left',
    fontSize: 10
};
const Sankey = (options)=>{
    const { data, encode = {}, scale, style = {}, layout = {}, nodeLabels = [], linkLabels = [], animate = {}, tooltip = {}, interaction } = options;
    // Initialize data, generating nodes by link if is not specified.
    const { links, nodes } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["initializeData"])(data, encode);
    // Extract encode for node and link.
    const nodeEncode = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(encode, 'node');
    const linkEncode = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(encode, 'link');
    const { key: nodeKey = (d)=>d.key, color = nodeKey } = nodeEncode;
    // Transform data, using nodeKey as nodeId.
    const { links: linkData, nodes: nodeData } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$data$2f$sankey$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Sankey"])(Object.assign(Object.assign(Object.assign({}, DEFAULT_LAYOUT_OPTIONS), {
        nodeId: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["field"])(nodeKey)
    }), layout))({
        links,
        nodes
    });
    // Extract label style and apply defaults.
    const _a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'label'), { text = nodeKey, spacing = 5 } = _a, labelStyle = __rest(_a, [
        "text",
        "spacing"
    ]);
    const key1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["field"])(nodeKey);
    const nodeTooltip = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subTooltip"])(tooltip, 'node', {
        title: key1,
        items: [
            {
                field: 'value'
            }
        ]
    }, true);
    const linkTooltip = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subTooltip"])(tooltip, 'link', {
        title: '',
        items: [
            (d)=>({
                    name: 'source',
                    value: key1(d.source)
                }),
            (d)=>({
                    name: 'target',
                    value: key1(d.target)
                })
        ]
    });
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, DEFAULT_NODE_OPTIONS, {
            data: nodeData,
            encode: Object.assign(Object.assign({}, nodeEncode), {
                color
            }),
            scale,
            style: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'node'),
            labels: [
                Object.assign(Object.assign(Object.assign({}, DEFAULT_LABEL_OPTIONS), {
                    text,
                    dx: (d)=>d.x[0] < 0.5 ? spacing : -spacing
                }), labelStyle),
                ...nodeLabels
            ],
            tooltip: nodeTooltip,
            animate: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeAnimation"])(animate, 'node'),
            axis: false,
            interaction
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, DEFAULT_LINK_OPTIONS, {
            data: linkData,
            encode: linkEncode,
            labels: linkLabels,
            style: Object.assign({
                fill: linkEncode.color ? undefined : '#aaa',
                lineWidth: 0
            }, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'link')),
            tooltip: linkTooltip,
            animate: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeAnimation"])(animate, 'link'),
            interaction
        })
    ];
};
Sankey.props = {}; //# sourceMappingURL=sankey.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/chord.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Chord": (()=>Chord)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/helper.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$data$2f$arc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/data/arc.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/mark.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-ssr] (ecmascript) <export default as deepMix>");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
;
;
;
;
const DEFAULT_LAYOUT_OPTIONS = {
    y: 0,
    thickness: 0.05,
    marginRatio: 0.1,
    id: (node)=>node.key,
    source: (edge)=>edge.source,
    target: (edge)=>edge.target,
    sourceWeight: (edge)=>edge.value || 1,
    targetWeight: (edge)=>edge.value || 1,
    sortBy: null
};
const DEFAULT_NODE_OPTIONS = {
    type: 'polygon',
    axis: false,
    legend: false,
    encode: {
        shape: 'polygon',
        x: 'x',
        y: 'y'
    },
    scale: {
        x: {
            type: 'identity'
        },
        y: {
            type: 'identity'
        }
    },
    style: {
        opacity: 1,
        fillOpacity: 1,
        lineWidth: 1
    }
};
const DEFAULT_LINK_OPTIONS = {
    type: 'polygon',
    axis: false,
    legend: false,
    encode: {
        shape: 'ribbon',
        x: 'x',
        y: 'y'
    },
    style: {
        opacity: 0.5,
        lineWidth: 1
    }
};
const DEFAULT_LABEL_OPTIONS = {
    position: 'outside',
    fontSize: 10
};
const Chord = (options, context)=>{
    const { data, encode = {}, scale, style = {}, layout = {}, nodeLabels = [], linkLabels = [], animate = {}, tooltip = {} } = options;
    // Initialize data, generating nodes by link if is not specified.
    const { nodes, links } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["initializeData"])(data, encode);
    // Extract encode for node and link.
    const nodeEncode = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(encode, 'node');
    const linkEncode = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(encode, 'link');
    const { key: nodeKey = (d)=>d.key, color = nodeKey } = nodeEncode;
    const { linkEncodeColor = (d)=>d.source } = linkEncode;
    const { nodeWidthRatio = DEFAULT_LAYOUT_OPTIONS.thickness, nodePaddingRatio = DEFAULT_LAYOUT_OPTIONS.marginRatio } = layout, restLayout = __rest(layout, [
        "nodeWidthRatio",
        "nodePaddingRatio"
    ]);
    const { nodes: nodeData, edges: linkData } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$data$2f$arc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Arc"])(Object.assign(Object.assign(Object.assign(Object.assign({}, DEFAULT_LAYOUT_OPTIONS), {
        id: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["field"])(nodeKey),
        thickness: nodeWidthRatio,
        marginRatio: nodePaddingRatio
    }), restLayout), {
        weight: true
    }))({
        nodes,
        edges: links
    });
    // Extract label style and apply defaults.
    const _a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'label'), { text = nodeKey } = _a, labelStyle = __rest(_a, [
        "text"
    ]);
    const nodeTooltip = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subTooltip"])(tooltip, 'node', {
        title: '',
        items: [
            (d)=>({
                    name: d.key,
                    value: d.value
                })
        ]
    }, true);
    const linkTooltip = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subTooltip"])(tooltip, 'link', {
        title: '',
        items: [
            (d)=>({
                    name: `${d.source} -> ${d.target}`,
                    value: d.value
                })
        ]
    });
    const { height, width } = context;
    const minimumLen = Math.min(height, width);
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, DEFAULT_LINK_OPTIONS, {
            data: linkData,
            encode: Object.assign(Object.assign({}, linkEncode), {
                color: linkEncodeColor
            }),
            labels: linkLabels,
            style: Object.assign({
                fill: linkEncodeColor ? undefined : '#aaa'
            }, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'link')),
            tooltip: linkTooltip,
            animate: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeAnimation"])(animate, 'link')
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, DEFAULT_NODE_OPTIONS, {
            data: nodeData,
            encode: Object.assign(Object.assign({}, nodeEncode), {
                color
            }),
            scale,
            style: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'node'),
            coordinate: {
                type: 'polar',
                // Leave enough rendering space for the label.
                outerRadius: (minimumLen - 20) / minimumLen,
                startAngle: -Math.PI * 2,
                endAngle: 0
            },
            labels: [
                Object.assign(Object.assign(Object.assign({}, DEFAULT_LABEL_OPTIONS), {
                    text
                }), labelStyle),
                ...nodeLabels
            ],
            tooltip: nodeTooltip,
            animate: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeAnimation"])(animate, 'node'),
            axis: false
        })
    ];
};
Chord.props = {}; //# sourceMappingURL=chord.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/treemap.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Treemap": (()=>Treemap)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$last$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__last$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/last.js [app-ssr] (ecmascript) <export default as last>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$get$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__get$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/get.js [app-ssr] (ecmascript) <export default as get>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-ssr] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$treeDataTransform$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/treeDataTransform.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/helper.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/mark.js [app-ssr] (ecmascript)");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
;
;
;
// Defaults
const GET_DEFAULT_LAYOUT_OPTIONS = (width, height)=>({
        tile: 'treemapSquarify',
        ratio: 0.5 * (1 + Math.sqrt(5)),
        size: [
            width,
            height
        ],
        round: false,
        ignoreParentValue: true,
        padding: 0,
        paddingInner: 0,
        paddingOuter: 0,
        paddingTop: 0,
        paddingRight: 0,
        paddingBottom: 0,
        paddingLeft: 0,
        sort: (a, b)=>b.value - a.value,
        layer: 0
    });
const GET_DEFAULT_OPTIONS = (width, height)=>({
        type: 'rect',
        axis: false,
        encode: {
            x: 'x',
            y: 'y',
            key: 'id',
            color: (d)=>d.path[1]
        },
        scale: {
            x: {
                domain: [
                    0,
                    width
                ],
                range: [
                    0,
                    1
                ]
            },
            y: {
                domain: [
                    0,
                    height
                ],
                range: [
                    0,
                    1
                ]
            }
        },
        style: {
            stroke: '#fff'
        },
        state: {
            active: {
                opacity: 0.6
            },
            inactive: {
                opacity: 1
            }
        }
    });
const DEFAULT_LABEL_OPTIONS = {
    fontSize: 10,
    text: (d)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$last$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__last$3e$__["last"])(d.path),
    position: 'inside',
    fill: '#000',
    textOverflow: 'clip',
    wordWrap: true,
    maxLines: 1,
    wordWrapWidth: (d)=>d.x1 - d.x0
};
const DEFAULT_TOOLTIP_OPTIONS = {
    title: (d)=>{
        var _a, _b;
        return (_b = (_a = d.path) === null || _a === void 0 ? void 0 : _a.join) === null || _b === void 0 ? void 0 : _b.call(_a, '.');
    },
    items: [
        {
            field: 'value'
        }
    ]
};
const DEFAULT_TOOLTIP_OPTIONS_DRILL = {
    title: (d)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$last$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__last$3e$__["last"])(d.path),
    items: [
        {
            field: 'value'
        }
    ]
};
const Treemap = (options, context)=>{
    const { width, height, options: markOptions } = context;
    const { data, encode = {}, scale, style = {}, layout = {}, labels = [], tooltip = {} } = options, resOptions = __rest(options, [
        "data",
        "encode",
        "scale",
        "style",
        "layout",
        "labels",
        "tooltip"
    ]);
    const treemapDrillDown = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$get$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__get$3e$__["get"])(markOptions, [
        'interaction',
        'treemapDrillDown'
    ]);
    // Layout
    const layoutOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, GET_DEFAULT_LAYOUT_OPTIONS(width, height), layout, {
        layer: treemapDrillDown ? (d)=>{
            return d.depth === 1;
        } : layout.layer
    });
    // Data
    const [transformedData, transformedDataAll] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$treeDataTransform$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["treeDataTransform"])(data, layoutOptions, encode);
    // Label
    const labelStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'label');
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, GET_DEFAULT_OPTIONS(width, height), Object.assign(Object.assign({
        data: transformedData,
        scale,
        style,
        labels: [
            Object.assign(Object.assign({}, DEFAULT_LABEL_OPTIONS), labelStyle),
            ...labels
        ]
    }, resOptions), {
        encode,
        tooltip: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeTooltip"])(tooltip, DEFAULT_TOOLTIP_OPTIONS),
        axis: false
    }), treemapDrillDown ? {
        interaction: Object.assign(Object.assign({}, resOptions.interaction), {
            treemapDrillDown: treemapDrillDown ? Object.assign(Object.assign({}, treemapDrillDown), {
                originData: transformedDataAll,
                layout: layoutOptions
            }) : undefined
        }),
        encode: Object.assign({
            color: (d)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$last$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__last$3e$__["last"])(d.path)
        }, encode),
        tooltip: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeTooltip"])(tooltip, DEFAULT_TOOLTIP_OPTIONS_DRILL)
    } : {});
};
Treemap.props = {}; //# sourceMappingURL=treemap.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/boxplot.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Boxplot": (()=>Boxplot)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/mark.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/helper.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/min.js [app-ssr] (ecmascript) <export default as min>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/max.js [app-ssr] (ecmascript) <export default as max>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$quantile$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__quantile$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/quantile.js [app-ssr] (ecmascript) <export default as quantile>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/group.js [app-ssr] (ecmascript) <export default as group>");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
;
;
function min(I, V) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__["min"])(I, (i)=>V[i]);
}
function max(I, V) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__["max"])(I, (i)=>V[i]);
}
function lower(I, V) {
    const lo = q1(I, V) * 2.5 - q3(I, V) * 1.5;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$min$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__min$3e$__["min"])(I, (i)=>V[i] >= lo ? V[i] : NaN);
}
function q1(I, V) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$quantile$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__quantile$3e$__["quantile"])(I, 0.25, (i)=>V[i]);
}
function q2(I, V) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$quantile$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__quantile$3e$__["quantile"])(I, 0.5, (i)=>V[i]);
}
function q3(I, V) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$quantile$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__quantile$3e$__["quantile"])(I, 0.75, (i)=>V[i]);
}
function upper(I, V) {
    const hi = q3(I, V) * 2.5 - q1(I, V) * 1.5;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$max$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__max$3e$__["max"])(I, (i)=>V[i] <= hi ? V[i] : NaN);
}
/**
 * Group marks by x and reserve outlier indexes.
 */ function OutlierY() {
    return (I, mark)=>{
        const { encode } = mark;
        const { y, x } = encode;
        const { value: V } = y;
        const { value: X } = x;
        const GI = Array.from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__["group"])(I, (i)=>X[+i]).values());
        const FI = GI.flatMap((I)=>{
            const lo = lower(I, V);
            const hi = upper(I, V);
            return I.filter((i)=>V[i] < lo || V[i] > hi);
        });
        return [
            FI,
            mark
        ];
    };
}
const Boxplot = (options)=>{
    const { data, encode, style = {}, tooltip = {}, transform, animate } = options, rest = __rest(options, [
        "data",
        "encode",
        "style",
        "tooltip",
        "transform",
        "animate"
    ]);
    const { point = true } = style, restStyle = __rest(style, [
        "point"
    ]);
    const { y } = encode;
    const encodeY = {
        y,
        y1: y,
        y2: y,
        y3: y,
        y4: y
    };
    const qy = {
        y1: q1,
        y2: q2,
        y3: q3
    };
    // Tooltips.
    const boxTooltip = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subTooltip"])(tooltip, 'box', {
        items: [
            {
                channel: 'y',
                name: 'min'
            },
            {
                channel: 'y1',
                name: 'q1'
            },
            {
                channel: 'y2',
                name: 'q2'
            },
            {
                channel: 'y3',
                name: 'q3'
            },
            {
                channel: 'y4',
                name: 'max'
            }
        ]
    }, true);
    const pointTooltip = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subTooltip"])(tooltip, 'point', {
        title: {
            channel: 'x'
        },
        items: [
            {
                name: 'outlier',
                channel: 'y'
            }
        ]
    });
    // Only show min and max instead of lower and upper.
    // Only draw a box.
    if (!point) {
        return Object.assign({
            type: 'box',
            data: data,
            transform: [
                Object.assign(Object.assign({
                    type: 'groupX',
                    y: min
                }, qy), {
                    y4: max
                })
            ],
            encode: Object.assign(Object.assign({}, encode), encodeY),
            style: restStyle,
            tooltip: boxTooltip
        }, rest);
    }
    const boxStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(restStyle, 'box');
    const pointStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(restStyle, 'point');
    return [
        Object.assign({
            type: 'box',
            data: data,
            transform: [
                Object.assign(Object.assign({
                    type: 'groupX',
                    y: lower
                }, qy), {
                    y4: upper
                })
            ],
            encode: Object.assign(Object.assign({}, encode), encodeY),
            style: boxStyle,
            tooltip: boxTooltip,
            animate: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeAnimation"])(animate, 'box')
        }, rest),
        // Draw outliers.
        {
            type: 'point',
            data: data,
            transform: [
                {
                    type: OutlierY
                }
            ],
            encode,
            style: Object.assign({}, pointStyle),
            tooltip: pointTooltip,
            animate: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$mark$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeAnimation"])(animate, 'point')
        }
    ];
};
Boxplot.props = {}; //# sourceMappingURL=boxplot.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/gauge.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Gauge": (()=>Gauge)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g$2f$dist$2f$index$2e$esm$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g/dist/index.esm.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/helper.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-ssr] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$gauge$2f$round$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Round__as__GaugeRound$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/gauge/round.js [app-ssr] (ecmascript) <export Round as GaugeRound>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$coordinate$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/coordinate.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$coordinate$2f$radial$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/coordinate/radial.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$selection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/selection.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g$2d$lite$2f$dist$2f$index$2e$esm$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g-lite/dist/index.esm.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$is$2d$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__isNumber$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/is-number.js [app-ssr] (ecmascript) <export default as isNumber>");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
;
;
;
;
;
;
;
const indicatorShape = (options, context)=>{
    const { shape, radius } = options, style = __rest(options, [
        "shape",
        "radius"
    ]);
    const pointerStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'pointer');
    const pinStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'pin');
    const { shape: pointerShape } = pointerStyle, resPointerStyle = __rest(pointerStyle, [
        "shape"
    ]);
    const { shape: pinShape } = pinStyle, resPinStyle = __rest(pinStyle, [
        "shape"
    ]);
    const { coordinate, theme } = context;
    return (points, value)=>{
        // Invert points.
        const invertedPoints = points.map((p)=>coordinate.invert(p));
        // Get new coordinate.
        const [startAngle, endAngle, innerRadius] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$coordinate$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getTransformOptions"])(coordinate, 'polar');
        const newCoordinate = coordinate.clone();
        const { color: stroke } = value;
        const newTransformations = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$coordinate$2f$radial$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Radial"])({
            startAngle,
            endAngle,
            innerRadius,
            outerRadius: radius
        });
        newTransformations.push([
            'cartesian'
        ]);
        newCoordinate.update({
            transformations: newTransformations
        });
        const newPoints = invertedPoints.map((p)=>newCoordinate.map(p));
        const [x, y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getOrigin"])(newPoints);
        const [cx, cy] = coordinate.getCenter();
        const pointerAttrs = Object.assign(Object.assign({
            x1: x,
            y1: y,
            x2: cx,
            y2: cy,
            stroke
        }, resPointerStyle), style);
        const pinAttrs = Object.assign(Object.assign({
            cx,
            cy,
            stroke
        }, resPinStyle), style);
        const indicatorGroup = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$selection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["select"])(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g$2d$lite$2f$dist$2f$index$2e$esm$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Group"]());
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUnset"])(pointerShape)) {
            typeof pointerShape === 'function' ? indicatorGroup.append(()=>pointerShape(newPoints, value, newCoordinate, theme)) : indicatorGroup.append('line').call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["applyStyle"], pointerAttrs).node();
        }
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUnset"])(pinShape)) {
            typeof pinShape === 'function' ? indicatorGroup.append(()=>pinShape(newPoints, value, newCoordinate, theme)) : indicatorGroup.append('circle').call(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["applyStyle"], pinAttrs).node();
        }
        return indicatorGroup.node();
    };
};
const DEFAULT_OPTIONS = {
    coordinate: {
        type: 'radial',
        innerRadius: 0.9,
        outerRadius: 1,
        startAngle: -11 / 10 * Math.PI,
        endAngle: 1 / 10 * Math.PI
    },
    axis: {
        x: false
    },
    legend: false,
    tooltip: false,
    encode: {
        x: 'x',
        y: 'y',
        color: 'color'
    },
    scale: {
        color: {
            range: [
                '#30BF78',
                '#D0D0D0'
            ]
        }
    }
};
const DEFAULT_INDICATOR_OPTIONS = {
    style: {
        shape: indicatorShape,
        lineWidth: 4,
        pointerLineCap: 'round',
        pinR: 10,
        pinFill: '#fff',
        radius: 0.6
    }
};
const DEFAULT_TEXT_OPTIONS = {
    type: 'text',
    style: {
        x: '50%',
        y: '60%',
        textAlign: 'center',
        textBaseline: 'middle',
        fontSize: 20,
        fontWeight: 800,
        fill: '#888'
    },
    tooltip: false
};
function getGaugeData(data) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$is$2d$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__isNumber$3e$__["isNumber"])(data)) {
        // Percent range [0, 1].
        const percent = Math.max(0, Math.min(data, 1));
        return {
            percent,
            target: percent,
            total: 1
        };
    }
    return data;
}
function dataTransform(data, scale) {
    const { name = 'score', target, total, percent, thresholds = [] } = getGaugeData(data);
    const _target = percent || target;
    const _total = percent ? 1 : total;
    const newScale = Object.assign({
        y: {
            domain: [
                0,
                _total
            ]
        }
    }, scale);
    if (!thresholds.length) {
        return {
            targetData: [
                {
                    x: name,
                    y: _target,
                    color: 'target'
                }
            ],
            totalData: [
                {
                    x: name,
                    y: _target,
                    color: 'target'
                },
                {
                    x: name,
                    y: _total - _target,
                    color: 'total'
                }
            ],
            target: _target,
            total: _total,
            scale: newScale
        };
    }
    return {
        targetData: [
            {
                x: name,
                y: _target,
                color: 'target'
            }
        ],
        totalData: thresholds.map((d, i)=>({
                x: name,
                y: i >= 1 ? d - thresholds[i - 1] : d,
                color: i
            })),
        target: _target,
        total: _total,
        scale: newScale
    };
}
function getTextContent(textStyle, { target, total }) {
    const { content } = textStyle;
    return content ? content(target, total) : target.toString();
}
const Gauge = (options)=>{
    const { data = {}, scale = {}, style = {}, animate = {}, transform = [] } = options, resOptions = __rest(options, [
        "data",
        "scale",
        "style",
        "animate",
        "transform"
    ]);
    const { targetData, totalData, target, total, scale: newScale } = dataTransform(data, scale);
    const _a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'text'), { tooltip } = _a, textStyle = __rest(_a, [
        "tooltip"
    ]);
    // pointer + pin
    const indicatorStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["filterPrefixObject"])(style, [
        'pointer',
        'pin'
    ]);
    const arcStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'arc');
    const shape = arcStyle.shape;
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, DEFAULT_OPTIONS, Object.assign({
            type: 'interval',
            transform: [
                {
                    type: 'stackY'
                }
            ],
            data: totalData,
            scale: newScale,
            style: shape === 'round' ? Object.assign(Object.assign({}, arcStyle), {
                shape: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$gauge$2f$round$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Round__as__GaugeRound$3e$__["GaugeRound"]
            }) : arcStyle,
            animate: typeof animate === 'object' ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(animate, 'arc') : animate
        }, resOptions)),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, DEFAULT_OPTIONS, DEFAULT_INDICATOR_OPTIONS, Object.assign({
            type: 'point',
            data: targetData,
            scale: newScale,
            style: indicatorStyle,
            animate: typeof animate === 'object' ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(animate, 'indicator') : animate
        }, resOptions)),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, DEFAULT_TEXT_OPTIONS, {
            style: Object.assign({
                text: getTextContent(textStyle, {
                    target,
                    total
                })
            }, textStyle),
            tooltip,
            animate: typeof animate === 'object' ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(animate, 'text') : animate
        })
    ];
};
Gauge.props = {}; //# sourceMappingURL=gauge.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/wordCloud.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "WordCloud": (()=>WordCloud)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-ssr] (ecmascript) <export default as deepMix>");
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
function initializeData(data, encode) {
    const { text = 'text', value = 'value' } = encode;
    return data.map((d)=>Object.assign(Object.assign({}, d), {
            text: d[text],
            value: d[value]
        }));
}
const GET_DEFAULT_OPTIONS = ()=>({
        axis: false,
        type: 'text',
        encode: {
            x: 'x',
            y: 'y',
            text: 'text',
            rotate: 'rotate',
            fontSize: 'size',
            shape: 'tag'
        },
        scale: {
            x: {
                range: [
                    0,
                    1
                ]
            },
            y: {
                range: [
                    0,
                    1
                ]
            }
        },
        style: {
            fontFamily: (d)=>d.fontFamily
        }
    });
const WordCloud = (options, context)=>__awaiter(void 0, void 0, void 0, function*() {
        const { width, height } = context;
        const { data, encode = {}, scale, style = {}, layout = {} } = options, resOptions = __rest(options, [
            "data",
            "encode",
            "scale",
            "style",
            "layout"
        ]);
        const initializedData = initializeData(data, encode);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, GET_DEFAULT_OPTIONS(), Object.assign(Object.assign({
            data: {
                value: initializedData,
                transform: [
                    Object.assign({
                        type: 'wordCloud',
                        size: [
                            width,
                            height
                        ]
                    }, layout)
                ]
            },
            encode,
            scale,
            style
        }, resOptions), {
            axis: false
        }));
    });
WordCloud.props = {}; //# sourceMappingURL=wordCloud.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/liquid.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Liquid": (()=>Liquid)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$liquid$2f$liquid$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Liquid__as__LiquidShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/liquid/liquid.js [app-ssr] (ecmascript) <export Liquid as LiquidShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$is$2d$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__isNumber$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/is-number.js [app-ssr] (ecmascript) <export default as isNumber>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/helper.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-ssr] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/number.js [app-ssr] (ecmascript)");
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
;
;
;
;
const DEFAULT_OPTIONS = {
    axis: {
        x: false,
        y: false
    },
    legend: false,
    tooltip: false,
    encode: {
        x: 'type',
        y: 'percent'
    },
    scale: {
        y: {
            domain: [
                0,
                1
            ]
        }
    },
    style: {
        shape: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$liquid$2f$liquid$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Liquid__as__LiquidShape$3e$__["LiquidShape"]
    },
    animate: {
        enter: {
            type: 'fadeIn'
        }
    }
};
const DEFAULT_TEXT_OPTIONS = {
    type: 'text',
    style: {
        x: '50%',
        y: '50%',
        textAlign: 'center',
        textBaseline: 'middle',
        fontSize: 20,
        fontWeight: 800,
        fill: '#888'
    },
    animate: {
        enter: {
            type: 'fadeIn'
        }
    }
};
const Liquid = (options)=>{
    const { data = {}, style = {}, animate } = options, resOptions = __rest(options, [
        "data",
        "style",
        "animate"
    ]);
    // Compatible with old data structures: { percent: number } and percent >= 0.
    const percent = Math.max(0, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$is$2d$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__isNumber$3e$__["isNumber"])(data) ? data : data === null || data === void 0 ? void 0 : data.percent);
    const newData = [
        {
            percent,
            type: 'liquid'
        }
    ];
    const contentStyle = Object.assign(Object.assign({}, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'text')), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'content'));
    const outline = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'outline');
    const wave = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'wave');
    const background = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$helper$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subObject"])(style, 'background');
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, DEFAULT_OPTIONS, Object.assign({
            type: 'interval',
            data: newData,
            style: {
                liquidOptions: {
                    percent,
                    liquidShape: style === null || style === void 0 ? void 0 : style.shape
                },
                styleOptions: Object.assign(Object.assign({}, style), {
                    outline,
                    wave,
                    background
                })
            },
            animate
        }, resOptions)),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({}, DEFAULT_TEXT_OPTIONS, {
            style: Object.assign({
                text: `${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["prettyNumber"])(percent * 100)} %`
            }, contentStyle),
            animate
        })
    ];
};
Liquid.props = {}; //# sourceMappingURL=liquid.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/interval.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Interval": (()=>Interval)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$rect$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Rect__as__IntervalShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/interval/rect.js [app-ssr] (ecmascript) <export Rect as IntervalShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$hollow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Hollow__as__IntervalHollow$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/interval/hollow.js [app-ssr] (ecmascript) <export Hollow as IntervalHollow>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$funnel$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Funnel__as__IntervalFunnel$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/interval/funnel.js [app-ssr] (ecmascript) <export Funnel as IntervalFunnel>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$pyramid$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Pyramid__as__IntervalPyramid$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/interval/pyramid.js [app-ssr] (ecmascript) <export Pyramid as IntervalPyramid>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroY1$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeZeroY1.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroX$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeZeroX.js [app-ssr] (ecmascript)");
;
;
;
function bandWidth(scale, x) {
    return scale.getBandWidth(scale.invert(x));
}
const shape = {
    rect: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$rect$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Rect__as__IntervalShape$3e$__["IntervalShape"],
    hollow: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$hollow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Hollow__as__IntervalHollow$3e$__["IntervalHollow"],
    funnel: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$funnel$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Funnel__as__IntervalFunnel$3e$__["IntervalFunnel"],
    pyramid: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$pyramid$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Pyramid__as__IntervalPyramid$3e$__["IntervalPyramid"]
};
const Interval = ()=>{
    return (index, scale, value, coordinate)=>{
        const { x: X, y: Y, y1: Y1, series: S, size: SZ } = value;
        // Calc width for each interval.
        // The scales for x and series channels must be band scale.
        const x = scale.x;
        const series = scale.series;
        const [width] = coordinate.getSize();
        const NSZ = SZ ? SZ.map((d)=>+d / width) : null;
        const x1x2 = !SZ ? (x, w, i)=>[
                x,
                x + w
            ] : (x, w, i)=>{
            const mx = x + w / 2;
            const s = NSZ[i];
            return [
                mx - s / 2,
                mx + s / 2
            ];
        };
        // Calc the points of bounding box for the interval.
        // They are start from left-top corner in clock wise order.
        const P = Array.from(index, (i)=>{
            const groupWidth = bandWidth(x, X[i]);
            const ratio = series ? bandWidth(series, S === null || S === void 0 ? void 0 : S[i]) : 1;
            const width = groupWidth * ratio;
            const offset = (+(S === null || S === void 0 ? void 0 : S[i]) || 0) * groupWidth;
            const x0 = +X[i] + offset;
            const [x1, x2] = x1x2(x0, width, i);
            const y1 = +Y[i];
            const y2 = +Y1[i];
            const p1 = [
                x1,
                y1
            ];
            const p2 = [
                x2,
                y1
            ];
            const p3 = [
                x2,
                y2
            ];
            const p4 = [
                x1,
                y2
            ];
            return [
                p1,
                p2,
                p3,
                p4
            ].map((d)=>coordinate.map(d));
        });
        return [
            index,
            P
        ];
    };
};
Interval.props = {
    defaultShape: 'rect',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseGeometryChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'x',
            scale: 'band',
            required: true
        },
        {
            name: 'y',
            required: true
        },
        {
            name: 'series',
            scale: 'band'
        },
        {
            name: 'size'
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])(),
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroY1$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeZeroY1"]
        },
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroX$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeZeroX"]
        }
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])(),
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tooltip1d"])()
    ],
    interaction: {
        shareTooltip: true
    }
}; //# sourceMappingURL=interval.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/rect.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Rect": (()=>Rect)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$rect$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Rect__as__RectShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/interval/rect.js [app-ssr] (ecmascript) <export Rect as RectShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$hollow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Hollow__as__RectHollow$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/interval/hollow.js [app-ssr] (ecmascript) <export Hollow as RectHollow>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroY1$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeZeroY1.js [app-ssr] (ecmascript)");
;
;
;
const shape = {
    rect: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$rect$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Rect__as__RectShape$3e$__["RectShape"],
    hollow: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$hollow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Hollow__as__RectHollow$3e$__["RectHollow"]
};
const Rect = ()=>{
    return (index, scale, value, coordinate)=>{
        const { x: X, x1: X1, y: Y, y1: Y1 } = value;
        const P = Array.from(index, (i)=>{
            const p1 = [
                +X[i],
                +Y[i]
            ];
            const p2 = [
                +X1[i],
                +Y[i]
            ];
            const p3 = [
                +X1[i],
                +Y1[i]
            ];
            const p4 = [
                +X[i],
                +Y1[i]
            ];
            return [
                p1,
                p2,
                p3,
                p4
            ].map((d)=>coordinate.map(d));
        });
        return [
            index,
            P
        ];
    };
};
Rect.props = {
    defaultShape: 'rect',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseGeometryChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'x',
            required: true
        },
        {
            name: 'y',
            required: true
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])(),
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroY1$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeZeroY1"]
        }
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])(),
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tooltip1d"])()
    ],
    interaction: {
        shareTooltip: true
    }
}; //# sourceMappingURL=rect.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/line.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Line": (()=>Line)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$line$2f$line$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Line__as__LineShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/line/line.js [app-ssr] (ecmascript) <export Line as LineShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$line$2f$smooth$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Smooth__as__LineSmooth$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/line/smooth.js [app-ssr] (ecmascript) <export Smooth as LineSmooth>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$line$2f$hv$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HV__as__LineHV$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/line/hv.js [app-ssr] (ecmascript) <export HV as LineHV>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$line$2f$vh$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__VH__as__LineVH$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/line/vh.js [app-ssr] (ecmascript) <export VH as LineVH>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$line$2f$hvh$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HVH__as__LineHVH$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/line/hvh.js [app-ssr] (ecmascript) <export HVH as LineHVH>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$line$2f$trail$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Trail__as__LineTrail$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/line/trail.js [app-ssr] (ecmascript) <export Trail as LineTrail>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/group.js [app-ssr] (ecmascript) <export default as group>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$coordinate$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/utils/coordinate.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeGradient$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeGradient.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeSeries$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeSeries.js [app-ssr] (ecmascript)");
;
;
;
;
;
const shape = {
    line: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$line$2f$line$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Line__as__LineShape$3e$__["LineShape"],
    smooth: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$line$2f$smooth$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Smooth__as__LineSmooth$3e$__["LineSmooth"],
    hv: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$line$2f$hv$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HV__as__LineHV$3e$__["LineHV"],
    vh: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$line$2f$vh$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__VH__as__LineVH$3e$__["LineVH"],
    hvh: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$line$2f$hvh$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HVH__as__LineHVH$3e$__["LineHVH"],
    trail: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$line$2f$trail$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Trail__as__LineTrail$3e$__["LineTrail"]
};
const line = (index, scale, value, coordinate)=>{
    var _a, _b;
    const { series: S, x: X, y: Y } = value;
    const { x, y } = scale;
    // Because x and y channel is not strictly required in Line.props,
    // it should throw error with empty x or y channels.
    if (X === undefined || Y === undefined) {
        throw new Error('Missing encode for x or y channel.');
    }
    // Group data into series.
    // There is only one series without specified series encode.
    const series = S ? Array.from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__["group"])(index, (i)=>S[i]).values()) : [
        index
    ];
    const I = series.map((group)=>group[0]).filter((i)=>i !== undefined);
    // A group of data corresponds to one line.
    const xoffset = (((_a = x === null || x === void 0 ? void 0 : x.getBandWidth) === null || _a === void 0 ? void 0 : _a.call(x)) || 0) / 2;
    const yoffset = (((_b = y === null || y === void 0 ? void 0 : y.getBandWidth) === null || _b === void 0 ? void 0 : _b.call(y)) || 0) / 2;
    const P = Array.from(series, (I)=>{
        return I.map((i)=>coordinate.map([
                +X[i] + xoffset,
                +Y[i] + yoffset
            ]));
    });
    return [
        I,
        P,
        series
    ];
};
const parallel = (index, scale, value, coordinate)=>{
    // Extract all value for position[number] channels.
    const PV = Object.entries(value).filter(([key])=>key.startsWith('position')).map(([, value])=>value);
    // Because position channel is not strictly required in Line.props,
    // it should throw error with empty position values.
    if (PV.length === 0) {
        throw new Error('Missing encode for position channel.');
    }
    // One data corresponds to one line.
    const P = Array.from(index, (i)=>{
        // Transform high dimension vector to a list of two-dimension vectors.
        // [a, b, c] -> [d, e, f, g, h, i]
        const vector = PV.map((pv)=>+pv[i]);
        const vectors = coordinate.map(vector);
        // Two-dimension vectors are stored in a flat array, so extract them.
        // [d, e, f, g, h, i] -> [d, e], [f, g], [h, i]
        const points = [];
        for(let i = 0; i < vectors.length; i += 2){
            points.push([
                vectors[i],
                vectors[i + 1]
            ]);
        }
        return points;
    });
    return [
        index,
        P
    ];
};
const Line = ()=>{
    return (index, scale, value, coordinate)=>{
        const mark = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$utils$2f$coordinate$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isParallel"])(coordinate) ? parallel : line;
        return mark(index, scale, value, coordinate);
    };
};
Line.props = {
    defaultShape: 'line',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseGeometryChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'x'
        },
        {
            name: 'y'
        },
        {
            name: 'position',
            independent: true
        },
        {
            name: 'size'
        },
        {
            name: 'series',
            scale: 'band'
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])(),
        // !!!Note This order is very important.
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeGradient$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeGradient"]
        },
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeSeries$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeSeries"]
        }
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])(),
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tooltip1d"])(),
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tooltipXd"])()
    ],
    interaction: {
        shareTooltip: true,
        seriesTooltip: true,
        crosshairs: true
    }
}; //# sourceMappingURL=line.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/point.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Point": (()=>Point)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hollow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HollowPoint__as__PointHollow$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/hollow.js [app-ssr] (ecmascript) <export HollowPoint as PointHollow>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hollowDiamond$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HollowDiamond__as__PointHollowDiamond$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/hollowDiamond.js [app-ssr] (ecmascript) <export HollowDiamond as PointHollowDiamond>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hollowHexagon$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HollowHexagon__as__PointHollowHexagon$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/hollowHexagon.js [app-ssr] (ecmascript) <export HollowHexagon as PointHollowHexagon>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hollowSquare$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HollowSquare__as__PointHollowSquare$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/hollowSquare.js [app-ssr] (ecmascript) <export HollowSquare as PointHollowSquare>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hollowTriangleDown$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HollowTriangleDown__as__PointHollowTriangleDown$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/hollowTriangleDown.js [app-ssr] (ecmascript) <export HollowTriangleDown as PointHollowTriangleDown>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hollowTriangle$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HollowTriangle__as__PointHollowTriangle$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/hollowTriangle.js [app-ssr] (ecmascript) <export HollowTriangle as PointHollowTriangle>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hollowBowtie$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HollowBowtie__as__PointHollowBowtie$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/hollowBowtie.js [app-ssr] (ecmascript) <export HollowBowtie as PointHollowBowtie>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hollowCircle$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HollowCircle__as__PointHollowCircle$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/hollowCircle.js [app-ssr] (ecmascript) <export HollowCircle as PointHollowCircle>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$point$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Point__as__PointShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/point.js [app-ssr] (ecmascript) <export Point as PointShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$plus$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Plus__as__PointPlus$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/plus.js [app-ssr] (ecmascript) <export Plus as PointPlus>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$diamond$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Diamond__as__PointDiamond$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/diamond.js [app-ssr] (ecmascript) <export Diamond as PointDiamond>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$square$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Square__as__PointSquare$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/square.js [app-ssr] (ecmascript) <export Square as PointSquare>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$triangle$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Triangle__as__PointTriangle$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/triangle.js [app-ssr] (ecmascript) <export Triangle as PointTriangle>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hexagon$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Hexagon__as__PointHexagon$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/hexagon.js [app-ssr] (ecmascript) <export Hexagon as PointHexagon>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$cross$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Cross__as__PointCross$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/cross.js [app-ssr] (ecmascript) <export Cross as PointCross>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$bowtie$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Bowtie__as__PointBowtie$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/bowtie.js [app-ssr] (ecmascript) <export Bowtie as PointBowtie>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hyphen$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Hyphen__as__PointHyphen$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/hyphen.js [app-ssr] (ecmascript) <export Hyphen as PointHyphen>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$line$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Line__as__PointLine$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/line.js [app-ssr] (ecmascript) <export Line as PointLine>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$tick$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Tick__as__PointTick$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/tick.js [app-ssr] (ecmascript) <export Tick as PointTick>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$triangleDown$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__TriangleDown__as__PointTriangleDown$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/triangleDown.js [app-ssr] (ecmascript) <export TriangleDown as PointTriangleDown>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$circle$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Circle__as__PointCircle$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/point/circle.js [app-ssr] (ecmascript) <export Circle as PointCircle>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroX$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeZeroX.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroY$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeZeroY.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeSize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeSize.js [app-ssr] (ecmascript)");
;
;
;
const shape = {
    hollow: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hollow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HollowPoint__as__PointHollow$3e$__["PointHollow"],
    hollowDiamond: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hollowDiamond$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HollowDiamond__as__PointHollowDiamond$3e$__["PointHollowDiamond"],
    hollowHexagon: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hollowHexagon$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HollowHexagon__as__PointHollowHexagon$3e$__["PointHollowHexagon"],
    hollowSquare: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hollowSquare$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HollowSquare__as__PointHollowSquare$3e$__["PointHollowSquare"],
    hollowTriangleDown: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hollowTriangleDown$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HollowTriangleDown__as__PointHollowTriangleDown$3e$__["PointHollowTriangleDown"],
    hollowTriangle: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hollowTriangle$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HollowTriangle__as__PointHollowTriangle$3e$__["PointHollowTriangle"],
    hollowBowtie: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hollowBowtie$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HollowBowtie__as__PointHollowBowtie$3e$__["PointHollowBowtie"],
    hollowCircle: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hollowCircle$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HollowCircle__as__PointHollowCircle$3e$__["PointHollowCircle"],
    point: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$point$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Point__as__PointShape$3e$__["PointShape"],
    plus: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$plus$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Plus__as__PointPlus$3e$__["PointPlus"],
    diamond: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$diamond$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Diamond__as__PointDiamond$3e$__["PointDiamond"],
    square: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$square$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Square__as__PointSquare$3e$__["PointSquare"],
    triangle: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$triangle$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Triangle__as__PointTriangle$3e$__["PointTriangle"],
    hexagon: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hexagon$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Hexagon__as__PointHexagon$3e$__["PointHexagon"],
    cross: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$cross$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Cross__as__PointCross$3e$__["PointCross"],
    bowtie: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$bowtie$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Bowtie__as__PointBowtie$3e$__["PointBowtie"],
    hyphen: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$hyphen$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Hyphen__as__PointHyphen$3e$__["PointHyphen"],
    line: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$line$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Line__as__PointLine$3e$__["PointLine"],
    tick: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$tick$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Tick__as__PointTick$3e$__["PointTick"],
    triangleDown: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$triangleDown$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__TriangleDown__as__PointTriangleDown$3e$__["PointTriangleDown"],
    circle: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$point$2f$circle$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Circle__as__PointCircle$3e$__["PointCircle"]
};
const Point = (options)=>{
    return (index, scale, value, coordinate)=>{
        const { x: X, y: Y, x1: X1, y1: Y1, size: S, dx: DX, dy: DY } = value;
        const [width, height] = coordinate.getSize();
        const offset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createBandOffset"])(scale, value, options);
        const xy = (i)=>{
            const dx = +((DX === null || DX === void 0 ? void 0 : DX[i]) || 0);
            const dy = +((DY === null || DY === void 0 ? void 0 : DY[i]) || 0);
            const x = X1 ? (+X[i] + +X1[i]) / 2 : +X[i];
            const y = Y1 ? (+Y[i] + +Y1[i]) / 2 : +Y[i];
            const cx = x + dx;
            const cy = y + dy;
            return [
                cx,
                cy
            ];
        };
        const P = S ? Array.from(index, (i)=>{
            const [cx, cy] = xy(i);
            const r = +S[i];
            const a = r / width;
            const b = r / height;
            const p1 = [
                cx - a,
                cy - b
            ];
            const p2 = [
                cx + a,
                cy + b
            ];
            return [
                coordinate.map(offset(p1, i)),
                coordinate.map(offset(p2, i))
            ];
        }) : Array.from(index, (i)=>[
                coordinate.map(offset(xy(i), i))
            ]);
        return [
            index,
            P
        ];
    };
};
Point.props = {
    defaultShape: 'hollow',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseGeometryChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'x',
            required: true
        },
        {
            name: 'y',
            required: true
        },
        {
            name: 'series',
            scale: 'band'
        },
        {
            name: 'size',
            quantitative: 'sqrt'
        },
        {
            name: 'dx',
            scale: 'identity'
        },
        {
            name: 'dy',
            scale: 'identity'
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])(),
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroX$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeZeroX"]
        },
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroY$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeZeroY"]
        }
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])(),
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeSize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeSize"]
        },
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tooltip2d"])()
    ]
}; //# sourceMappingURL=point.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/text.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Text": (()=>Text)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$text$2f$text$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Text__as__TextShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/text/text.js [app-ssr] (ecmascript) <export Text as TextShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$text$2f$badge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Badge__as__TextBadge$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/text/badge.js [app-ssr] (ecmascript) <export Badge as TextBadge>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$text$2f$tag$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Tag__as__TextTag$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/text/tag.js [app-ssr] (ecmascript) <export Tag as TextTag>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTuple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeTuple.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeVisualPosition$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeVisualPosition.js [app-ssr] (ecmascript)");
;
;
;
const shape = {
    text: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$text$2f$text$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Text__as__TextShape$3e$__["TextShape"],
    badge: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$text$2f$badge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Badge__as__TextBadge$3e$__["TextBadge"],
    tag: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$text$2f$tag$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Tag__as__TextTag$3e$__["TextTag"]
};
const Text = (options)=>{
    const { cartesian = false } = options;
    if (cartesian) return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["visualMark"];
    return (index, scale, value, coordinate)=>{
        const { x: X, y: Y } = value;
        const offset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createBandOffset"])(scale, value, options);
        const P = Array.from(index, (i)=>{
            const p = [
                +X[i],
                +Y[i]
            ];
            return [
                coordinate.map(offset(p, i))
            ];
        });
        return [
            index,
            P
        ];
    };
};
Text.props = {
    defaultShape: 'text',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseGeometryChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'x',
            required: true
        },
        {
            name: 'y',
            required: true
        },
        {
            name: 'text',
            scale: 'identity'
        },
        {
            name: 'fontSize',
            scale: 'identity'
        },
        {
            name: 'rotate',
            scale: 'identity'
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])(),
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTuple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeTuple"]
        },
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeVisualPosition$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeVisualPosition"]
        }
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])(),
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tooltip2d"])()
    ]
}; //# sourceMappingURL=text.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/cell.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Cell": (()=>Cell)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$rect$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Rect__as__CellShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/interval/rect.js [app-ssr] (ecmascript) <export Rect as CellShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$hollow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Hollow__as__CellHollow$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/interval/hollow.js [app-ssr] (ecmascript) <export Hollow as CellHollow>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroX$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeZeroX.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroY$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeZeroY.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroPadding$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeZeroPadding.js [app-ssr] (ecmascript)");
;
;
;
const shape = {
    cell: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$rect$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Rect__as__CellShape$3e$__["CellShape"],
    hollow: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$hollow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Hollow__as__CellHollow$3e$__["CellHollow"]
};
const Cell = ()=>{
    return (index, scale, value, coordinate)=>{
        const { x: X, y: Y } = value;
        const x = scale.x;
        const y = scale.y;
        const P = Array.from(index, (i)=>{
            const width = x.getBandWidth(x.invert(+X[i]));
            const height = y.getBandWidth(y.invert(+Y[i]));
            const x1 = +X[i];
            const y1 = +Y[i];
            const p1 = [
                x1,
                y1
            ];
            const p2 = [
                x1 + width,
                y1
            ];
            const p3 = [
                x1 + width,
                y1 + height
            ];
            const p4 = [
                x1,
                y1 + height
            ];
            return [
                p1,
                p2,
                p3,
                p4
            ].map((d)=>coordinate.map(d));
        });
        return [
            index,
            P
        ];
    };
};
Cell.props = {
    defaultShape: 'cell',
    defaultLabelShape: 'label',
    shape,
    composite: false,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseGeometryChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'x',
            required: true,
            scale: 'band'
        },
        {
            name: 'y',
            required: true,
            scale: 'band'
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])(),
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroX$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeZeroX"]
        },
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroY$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeZeroY"]
        },
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroPadding$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeZeroPadding"]
        }
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])(),
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tooltip2d"])()
    ]
}; //# sourceMappingURL=cell.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/area.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Area": (()=>Area)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$area$2f$area$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Area__as__AreaShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/area/area.js [app-ssr] (ecmascript) <export Area as AreaShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$area$2f$smooth$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Smooth__as__AreaSmooth$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/area/smooth.js [app-ssr] (ecmascript) <export Smooth as AreaSmooth>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$area$2f$hvh$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HVH__as__AreaHVH$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/area/hvh.js [app-ssr] (ecmascript) <export HVH as AreaHVH>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$area$2f$vh$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__VH__as__AreaVH$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/area/vh.js [app-ssr] (ecmascript) <export VH as AreaVH>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$area$2f$hv$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HV__as__AreaHV$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/area/hv.js [app-ssr] (ecmascript) <export HV as AreaHV>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__ = __turbopack_import__("[project]/node_modules/d3-array/src/group.js [app-ssr] (ecmascript) <export default as group>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeSeries$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeSeries.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroY1$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeZeroY1.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroPadding$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeZeroPadding.js [app-ssr] (ecmascript)");
;
;
;
;
const shape = {
    area: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$area$2f$area$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Area__as__AreaShape$3e$__["AreaShape"],
    smooth: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$area$2f$smooth$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Smooth__as__AreaSmooth$3e$__["AreaSmooth"],
    hvh: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$area$2f$hvh$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HVH__as__AreaHVH$3e$__["AreaHVH"],
    vh: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$area$2f$vh$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__VH__as__AreaVH$3e$__["AreaVH"],
    hv: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$area$2f$hv$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__HV__as__AreaHV$3e$__["AreaHV"]
};
const Area = ()=>{
    return (index, scale, value, coordinate)=>{
        var _a, _b;
        const { x: X, y: Y, y1: Y1, series: S } = value;
        const { x, y } = scale;
        // Group data by series field.
        const series = S ? Array.from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$d3$2d$array$2f$src$2f$group$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__group$3e$__["group"])(index, (i)=>S[i]).values()) : [
            index
        ];
        const I = series.map((group)=>group[0]).filter((i)=>i !== undefined);
        // A group of data corresponds to one area.
        const xoffset = (((_a = x === null || x === void 0 ? void 0 : x.getBandWidth) === null || _a === void 0 ? void 0 : _a.call(x)) || 0) / 2;
        const yoffset = (((_b = y === null || y === void 0 ? void 0 : y.getBandWidth) === null || _b === void 0 ? void 0 : _b.call(y)) || 0) / 2;
        const P = Array.from(series, (SI)=>{
            const l = SI.length;
            const points = new Array(l * 2);
            for(let idx = 0; idx < SI.length; idx++){
                const i = SI[idx];
                points[idx] = coordinate.map([
                    +X[i] + xoffset,
                    +Y[i] + yoffset
                ]); // y1
                points[l + idx] = coordinate.map([
                    +X[i] + xoffset,
                    +Y1[i] + yoffset
                ]); // y0
            }
            return points;
        });
        return [
            I,
            P,
            series
        ];
    };
};
Area.props = {
    defaultShape: 'area',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseGeometryChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'x',
            required: true
        },
        {
            name: 'y',
            required: true
        },
        {
            name: 'size'
        },
        {
            name: 'series',
            scale: 'band'
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])(),
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeSeries$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeSeries"]
        },
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroY1$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeZeroY1"]
        },
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroPadding$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeZeroPadding"]
        }
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])(),
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tooltip1d"])()
    ],
    interaction: {
        shareTooltip: true,
        seriesTooltip: true,
        crosshairs: true
    }
}; //# sourceMappingURL=area.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/link.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Link": (()=>Link)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$link$2f$link$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Link__as__LinkShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/link/link.js [app-ssr] (ecmascript) <export Link as LinkShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$link$2f$arc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Arc__as__LinkArc$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/link/arc.js [app-ssr] (ecmascript) <export Arc as LinkArc>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$link$2f$smooth$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Smooth__as__LinkSmooth$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/link/smooth.js [app-ssr] (ecmascript) <export Smooth as LinkSmooth>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$link$2f$vhv$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__VHV__as__LinkVHV$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/link/vhv.js [app-ssr] (ecmascript) <export VHV as LinkVHV>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeIdentityY$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeIdentityY.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeIdentityX$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeIdentityX.js [app-ssr] (ecmascript)");
;
;
;
const shape = {
    link: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$link$2f$link$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Link__as__LinkShape$3e$__["LinkShape"],
    arc: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$link$2f$arc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Arc__as__LinkArc$3e$__["LinkArc"],
    smooth: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$link$2f$smooth$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Smooth__as__LinkSmooth$3e$__["LinkSmooth"],
    vhv: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$link$2f$vhv$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__VHV__as__LinkVHV$3e$__["LinkVHV"]
};
const Link = (options)=>{
    return (index, scale, value, coordinate)=>{
        const { x: X, y: Y, x1: X1 = X, y1: Y1 = Y } = value;
        const offset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createBandOffset"])(scale, value, options);
        const P = index.map((i)=>[
                coordinate.map(offset([
                    +X[i],
                    +Y[i]
                ], i)),
                coordinate.map(offset([
                    +X1[i],
                    +Y1[i]
                ], i))
            ]);
        return [
            index,
            P
        ];
    };
};
Link.props = {
    defaultShape: 'link',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseGeometryChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'x',
            required: true
        },
        {
            name: 'y',
            required: true
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])(),
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeIdentityY$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeIdentityY"]
        },
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeIdentityX$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeIdentityX"]
        }
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])(),
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tooltip2d"])()
    ]
}; //# sourceMappingURL=link.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/image.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Image": (()=>Image)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$image$2f$image$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Image__as__ImageShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/image/image.js [app-ssr] (ecmascript) <export Image as ImageShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTuple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeTuple.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeVisualPosition$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeVisualPosition.js [app-ssr] (ecmascript)");
;
;
;
const shape = {
    image: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$image$2f$image$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Image__as__ImageShape$3e$__["ImageShape"]
};
const Image = (options)=>{
    const { cartesian } = options;
    if (cartesian) return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["visualMark"];
    return (index, scale, value, coordinate)=>{
        const { x: X, y: Y } = value;
        const offset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createBandOffset"])(scale, value, options);
        const P = Array.from(index, (i)=>{
            const p = [
                +X[i],
                +Y[i]
            ];
            return [
                coordinate.map(offset(p, i))
            ];
        });
        return [
            index,
            P
        ];
    };
};
Image.props = {
    defaultShape: 'image',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseGeometryChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'x',
            required: true
        },
        {
            name: 'y',
            required: true
        },
        {
            name: 'src',
            scale: 'identity'
        },
        {
            name: 'size'
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])(),
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTuple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeTuple"]
        },
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeVisualPosition$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeVisualPosition"]
        }
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])(),
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tooltip2d"])()
    ]
}; //# sourceMappingURL=image.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/polygon.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Polygon": (()=>Polygon)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$polygon$2f$polygon$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Polygon__as__PolygonShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/polygon/polygon.js [app-ssr] (ecmascript) <export Polygon as PolygonShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$polygon$2f$ribbon$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Ribbon__as__PolygonRibbon$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/polygon/ribbon.js [app-ssr] (ecmascript) <export Ribbon as PolygonRibbon>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
;
;
const shape = {
    polygon: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$polygon$2f$polygon$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Polygon__as__PolygonShape$3e$__["PolygonShape"],
    ribbon: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$polygon$2f$ribbon$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Ribbon__as__PolygonRibbon$3e$__["PolygonRibbon"]
};
const Polygon = ()=>{
    return (index, scale, value, coordinate)=>{
        const Xn = Object.entries(value).filter(([key])=>key.startsWith('x')).map(([, value])=>value);
        const Yn = Object.entries(value).filter(([key])=>key.startsWith('y')).map(([, value])=>value);
        const P = index.map((i)=>{
            const Pn = [];
            for(let j = 0; j < Xn.length; j++){
                const x = Xn[j][i];
                if (x === undefined) break;
                const y = Yn[j][i];
                Pn.push(coordinate.map([
                    +x,
                    +y
                ]));
            }
            return Pn;
        });
        return [
            index,
            P
        ];
    };
};
Polygon.props = {
    defaultShape: 'polygon',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseGeometryChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'x',
            required: true
        },
        {
            name: 'y',
            required: true
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])()
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])(),
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tooltip2d"])()
    ]
}; //# sourceMappingURL=polygon.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/box.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Box": (()=>Box)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$box$2f$box$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Box__as__BoxShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/box/box.js [app-ssr] (ecmascript) <export Box as BoxShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$box$2f$violin$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Violin__as__BoxViolin$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/box/violin.js [app-ssr] (ecmascript) <export Violin as BoxViolin>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroX$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeZeroX.js [app-ssr] (ecmascript)");
;
;
;
const shape = {
    box: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$box$2f$box$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Box__as__BoxShape$3e$__["BoxShape"],
    violin: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$box$2f$violin$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Violin__as__BoxViolin$3e$__["BoxViolin"]
};
const Box = ()=>{
    return (index, scale, value, coordinate)=>{
        const { x: X, y: Y, y1: Y1, y2: Y2, y3: Y3, y4: Y4, series: S } = value;
        // Calc width for each box.
        // The scales for x and series channels must be band scale.
        const xScale = scale.x;
        const series = scale.series;
        const P = Array.from(index, (i)=>{
            const groupWidth = xScale.getBandWidth(xScale.invert(+X[i]));
            const ratio = series ? series.getBandWidth(series.invert(+(S === null || S === void 0 ? void 0 : S[i]))) : 1;
            const width = groupWidth * ratio;
            const offset = (+(S === null || S === void 0 ? void 0 : S[i]) || 0) * groupWidth;
            const x = +X[i] + offset + width / 2;
            const [low, q1, median, q3, high] = [
                +Y[i],
                +Y1[i],
                +Y2[i],
                +Y3[i],
                +Y4[i]
            ];
            const P13 = [
                [
                    x - width / 2,
                    high
                ],
                [
                    x + width / 2,
                    high
                ],
                [
                    x,
                    high
                ],
                [
                    x,
                    q3
                ],
                [
                    x - width / 2,
                    q3
                ],
                [
                    x + width / 2,
                    q3
                ],
                [
                    x + width / 2,
                    q1
                ],
                [
                    x - width / 2,
                    q1
                ],
                [
                    x - width / 2,
                    median
                ],
                [
                    x + width / 2,
                    median
                ],
                [
                    x,
                    q1
                ],
                [
                    x,
                    low
                ],
                [
                    x - width / 2,
                    low
                ],
                [
                    x + width / 2,
                    low
                ]
            ];
            return P13.map((d)=>coordinate.map(d));
        });
        return [
            index,
            P
        ];
    };
};
Box.props = {
    defaultShape: 'box',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseGeometryChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'x',
            scale: 'band',
            required: true
        },
        {
            name: 'y',
            required: true
        },
        {
            name: 'series',
            scale: 'band'
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])(),
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroX$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeZeroX"]
        }
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])(),
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tooltip1d"])()
    ],
    interaction: {
        shareTooltip: true
    }
}; //# sourceMappingURL=box.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/vector.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Vector": (()=>Vector)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$vector$2f$vector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Vector__as__VectorShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/vector/vector.js [app-ssr] (ecmascript) <export Vector as VectorShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
;
;
const shape = {
    vector: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$vector$2f$vector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Vector__as__VectorShape$3e$__["VectorShape"]
};
const Vector = ()=>{
    return (index, scale, value, coordinate)=>{
        const { x: X, y: Y, size: S, rotate: R } = value;
        const [width, height] = coordinate.getSize();
        const P = index.map((i)=>{
            const angle = +R[i] / 180 * Math.PI;
            const s = +S[i];
            const a = s / width;
            const b = s / height;
            const vx = a * Math.cos(angle);
            const vy = -b * Math.sin(angle);
            return [
                coordinate.map([
                    +X[i] - vx / 2,
                    +Y[i] - vy / 2
                ]),
                coordinate.map([
                    +X[i] + vx / 2,
                    +Y[i] + vy / 2
                ])
            ];
        });
        return [
            index,
            P
        ];
    };
};
Vector.props = {
    defaultShape: 'vector',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseGeometryChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'x',
            required: true
        },
        {
            name: 'y',
            required: true
        },
        {
            name: 'rotate',
            required: true,
            scale: 'identity'
        },
        {
            name: 'size',
            required: true
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])()
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])(),
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tooltip2d"])()
    ]
}; //# sourceMappingURL=vector.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/lineX.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "LineX": (()=>LineX)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$lineXY$2f$line$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Line__as__LineXY$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/lineXY/line.js [app-ssr] (ecmascript) <export Line as LineXY>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-ssr] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTupleX$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeTupleX.js [app-ssr] (ecmascript)");
;
;
;
;
const shape = {
    line: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$lineXY$2f$line$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Line__as__LineXY$3e$__["LineXY"]
};
const LineX = (options)=>{
    return (index, scale, value, coordinate)=>{
        const { x: X } = value;
        const offset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createBandOffset"])(scale, value, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({
            style: {
                bandOffset: 0
            }
        }, options));
        const P = Array.from(index, (i)=>{
            const p1 = [
                X[i],
                1
            ];
            const p2 = [
                X[i],
                0
            ];
            return [
                p1,
                p2
            ].map((d)=>coordinate.map(offset(d, i)));
        });
        return [
            index,
            P
        ];
    };
};
LineX.props = {
    defaultShape: 'line',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseAnnotationChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'x',
            required: true
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])(),
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTupleX$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeTupleX"]
        }
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])()
    ]
}; //# sourceMappingURL=lineX.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/lineY.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "LineY": (()=>LineY)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$lineXY$2f$line$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Line__as__LineXY$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/lineXY/line.js [app-ssr] (ecmascript) <export Line as LineXY>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__ = __turbopack_import__("[project]/node_modules/@antv/util/esm/lodash/deep-mix.js [app-ssr] (ecmascript) <export default as deepMix>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTupleY$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeTupleY.js [app-ssr] (ecmascript)");
;
;
;
;
const shape = {
    line: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$lineXY$2f$line$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Line__as__LineXY$3e$__["LineXY"]
};
const LineY = (options)=>{
    return (index, scale, value, coordinate)=>{
        const { y: Y } = value;
        const offset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createBandOffset"])(scale, value, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$util$2f$esm$2f$lodash$2f$deep$2d$mix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__deepMix$3e$__["deepMix"])({
            style: {
                bandOffset: 0
            }
        }, options));
        const P = Array.from(index, (i)=>{
            const p1 = [
                0,
                Y[i]
            ];
            const p2 = [
                1,
                Y[i]
            ];
            return [
                p1,
                p2
            ].map((d)=>coordinate.map(offset(d, i)));
        });
        return [
            index,
            P
        ];
    };
};
LineY.props = {
    defaultShape: 'line',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseAnnotationChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'y',
            required: true
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])(),
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTupleY$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeTupleY"]
        }
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])()
    ]
}; //# sourceMappingURL=lineY.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/connector.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Connector": (()=>Connector)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$connector$2f$connector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Connector__as__ConnectorShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/connector/connector.js [app-ssr] (ecmascript) <export Connector as ConnectorShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$link$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/link.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
;
;
;
const shape = {
    connector: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$connector$2f$connector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Connector__as__ConnectorShape$3e$__["ConnectorShape"]
};
const Connector = (...args)=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$link$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Link"])(...args);
};
Connector.props = {
    defaultShape: 'connector',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseAnnotationChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'x',
            required: true
        },
        {
            name: 'y',
            required: true
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])()
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])()
    ]
}; //# sourceMappingURL=connector.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/range.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AbstractRange": (()=>AbstractRange),
    "Range": (()=>Range)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$rect$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Rect__as__RangeShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/interval/rect.js [app-ssr] (ecmascript) <export Rect as RangeShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
;
;
function extend(channel, extended, value, scale) {
    if (extended) return ()=>[
            0,
            1
        ];
    const { [channel]: C, [`${channel}1`]: C1 } = value;
    return (i)=>{
        var _a;
        const offset = ((_a = scale.getBandWidth) === null || _a === void 0 ? void 0 : _a.call(scale, scale.invert(+C1[i]))) || 0;
        return [
            C[i],
            C1[i] + offset
        ];
    };
}
function AbstractRange(options = {}) {
    const { extendX = false, extendY = false } = options;
    return (index, scale, value, coordinate)=>{
        const x = extend('x', extendX, value, scale.x);
        const y = extend('y', extendY, value, scale.y);
        const P = Array.from(index, (i)=>{
            const [x1, x2] = x(i);
            const [y1, y2] = y(i);
            const p1 = [
                x1,
                y1
            ];
            const p2 = [
                x2,
                y1
            ];
            const p3 = [
                x2,
                y2
            ];
            const p4 = [
                x1,
                y2
            ];
            return [
                p1,
                p2,
                p3,
                p4
            ].map((d)=>coordinate.map(d));
        });
        return [
            index,
            P
        ];
    };
}
const shape = {
    range: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$rect$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Rect__as__RangeShape$3e$__["RangeShape"]
};
const Range = ()=>{
    return AbstractRange();
};
Range.props = {
    defaultShape: 'range',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseAnnotationChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'x',
            required: true
        },
        {
            name: 'y',
            required: true
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])()
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])()
    ]
}; //# sourceMappingURL=range.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/rangeX.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "RangeX": (()=>RangeX)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$rect$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Rect__as__RangeShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/interval/rect.js [app-ssr] (ecmascript) <export Rect as RangeShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$range$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/range.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeDefaultX$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeDefaultX.js [app-ssr] (ecmascript)");
;
;
;
;
const shape = {
    range: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$rect$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Rect__as__RangeShape$3e$__["RangeShape"]
};
const RangeX = ()=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$range$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AbstractRange"])({
        extendY: true
    });
};
RangeX.props = {
    defaultShape: 'range',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseAnnotationChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'x',
            required: true
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])(),
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeDefaultX$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeDefaultX"]
        }
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])()
    ]
}; //# sourceMappingURL=rangeX.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/rangeY.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "RangeY": (()=>RangeY)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$rect$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Rect__as__RangeShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/interval/rect.js [app-ssr] (ecmascript) <export Rect as RangeShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$range$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/range.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeDefaultY$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeDefaultY.js [app-ssr] (ecmascript)");
;
;
;
;
const shape = {
    range: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$interval$2f$rect$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Rect__as__RangeShape$3e$__["RangeShape"]
};
const RangeY = ()=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$range$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AbstractRange"])({
        extendX: true
    });
};
RangeY.props = {
    defaultShape: 'range',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseAnnotationChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'y',
            required: true
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])(),
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeDefaultY$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeDefaultY"]
        }
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])()
    ]
}; //# sourceMappingURL=rangeY.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/path.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Path": (()=>Path)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$path$2f$path$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Path__as__PathShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/path/path.js [app-ssr] (ecmascript) <export Path as PathShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$path$2f$hollow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Hollow__as__PathHollow$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/path/hollow.js [app-ssr] (ecmascript) <export Hollow as PathHollow>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
;
;
const shape = {
    path: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$path$2f$path$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Path__as__PathShape$3e$__["PathShape"],
    hollow: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$path$2f$hollow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Hollow__as__PathHollow$3e$__["PathHollow"]
};
const Path = (options)=>{
    return (index, scale, value, coordinate)=>{
        // The points is meaning less for path mark,
        // because the position of path shapes specified
        // by the d option. So set [0, 0] for render pipeline.
        return [
            index,
            index.map(()=>[
                    [
                        0,
                        0
                    ]
                ])
        ];
    };
};
Path.props = {
    defaultShape: 'path',
    defaultLabelShape: 'label',
    shape,
    composite: false,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseGeometryChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'd',
            scale: 'identity'
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])()
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])()
    ]
}; //# sourceMappingURL=path.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/shape.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Shape": (()=>Shape)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$shape$2f$shape$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Shape__as__ShapeShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/shape/shape.js [app-ssr] (ecmascript) <export Shape as ShapeShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTuple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeTuple.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeVisualPosition$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeVisualPosition.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeFunctionAttribute$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeFunctionAttribute.js [app-ssr] (ecmascript)");
;
;
;
const shape = {
    shape: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$shape$2f$shape$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Shape__as__ShapeShape$3e$__["ShapeShape"]
};
const Shape = (options)=>{
    const { cartesian } = options;
    if (cartesian) return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["visualMark"];
    return (index, scale, value, coordinate)=>{
        const { x: X, y: Y } = value;
        const offset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createBandOffset"])(scale, value, options);
        const P = Array.from(index, (i)=>{
            const p = [
                +X[i],
                +Y[i]
            ];
            return [
                coordinate.map(offset(p, i))
            ];
        });
        return [
            index,
            P
        ];
    };
};
Shape.props = {
    defaultShape: 'shape',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        {
            name: 'x',
            required: true
        },
        {
            name: 'y',
            required: true
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])(),
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeTuple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeTuple"]
        },
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeVisualPosition$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeVisualPosition"]
        },
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeFunctionAttribute$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeFunctionAttribute"]
        }
    ]
}; //# sourceMappingURL=shape.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/density.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Density": (()=>Density)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$density$2f$density$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Density__as__DensityShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/density/density.js [app-ssr] (ecmascript) <export Density as DensityShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroY1$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeZeroY1.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroX$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeZeroX.js [app-ssr] (ecmascript)");
;
;
;
const shape = {
    density: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$density$2f$density$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Density__as__DensityShape$3e$__["DensityShape"]
};
const Density = ()=>{
    return (index, scale, value, coordinate)=>{
        const { x: X, series: S } = value;
        const Yn = Object.entries(value).filter(([key])=>key.startsWith('y')).map(([, value])=>value);
        const SZn = Object.entries(value).filter(([key])=>key.startsWith('size')).map(([, value])=>value);
        // Because x and y channel is not strictly required in Line.props,
        // it should throw error with empty x or y channels.
        if (X === undefined || Yn === undefined || SZn === undefined) {
            throw new Error('Missing encode for x or y or size channel.');
        }
        // Calc width for each box.
        // The scales for x and series channels must be band scale.
        const xScale = scale.x;
        const series = scale.series;
        const P = Array.from(index, (i)=>{
            const groupWidth = xScale.getBandWidth(xScale.invert(+X[i]));
            const ratio = series ? series.getBandWidth(series.invert(+(S === null || S === void 0 ? void 0 : S[i]))) : 1;
            const width = groupWidth * ratio;
            const offset = (+(S === null || S === void 0 ? void 0 : S[i]) || 0) * groupWidth;
            const x = +X[i] + offset + width / 2;
            const PN = [
                ...Yn.map((_, idx)=>[
                        x + +SZn[idx][i] / index.length,
                        +Yn[idx][i]
                    ]),
                ...Yn.map((_, idx)=>[
                        x - +SZn[idx][i] / index.length,
                        +Yn[idx][i]
                    ]).reverse()
            ];
            return PN.map((p)=>coordinate.map(p));
        });
        return [
            index,
            P
        ];
    };
};
Density.props = {
    defaultShape: 'density',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseGeometryChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'x',
            scale: 'band',
            required: true
        },
        {
            name: 'y',
            required: true
        },
        {
            name: 'size',
            required: true
        },
        {
            name: 'series',
            scale: 'band'
        },
        {
            name: 'size',
            required: true,
            scale: 'identity'
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])(),
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroY1$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeZeroY1"]
        },
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroX$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeZeroX"]
        }
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])(),
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tooltip1d"])()
    ],
    interaction: {
        shareTooltip: true
    }
}; //# sourceMappingURL=density.js.map
}}),
"[project]/node_modules/@antv/g2/esm/mark/heatmap.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Heatmap": (()=>Heatmap)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$heatmap$2f$heatmap$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Heatmap__as__HeatmapShape$3e$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/shape/heatmap/heatmap.js [app-ssr] (ecmascript) <export Heatmap as HeatmapShape>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/mark/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroX$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeZeroX.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroY$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@antv/g2/esm/transform/maybeZeroY.js [app-ssr] (ecmascript)");
;
;
;
const shape = {
    heatmap: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$shape$2f$heatmap$2f$heatmap$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__Heatmap__as__HeatmapShape$3e$__["HeatmapShape"]
};
const Heatmap = (options)=>{
    return (index, scale, value, coordinate)=>{
        const { x: X, y: Y, size: S, color: C } = value;
        const P = Array.from(index, (i)=>{
            // Default size = 40.
            const r = S ? +S[i] : 40;
            // Warning: x, y, value, radius.
            return [
                ...coordinate.map([
                    +X[i],
                    +Y[i]
                ]),
                C[i],
                r
            ];
        });
        return [
            [
                0
            ],
            [
                P
            ]
        ];
    };
};
Heatmap.props = {
    defaultShape: 'heatmap',
    defaultLabelShape: 'label',
    composite: false,
    shape,
    channels: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["baseGeometryChannels"])({
            shapes: Object.keys(shape)
        }),
        {
            name: 'x',
            required: true
        },
        {
            name: 'y',
            required: true
        },
        {
            name: 'color',
            scale: 'identity',
            required: true
        },
        {
            name: 'size'
        }
    ],
    preInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePreInference"])(),
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroX$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeZeroX"]
        },
        {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$transform$2f$maybeZeroY$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MaybeZeroY"]
        }
    ],
    postInference: [
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["basePostInference"])(),
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$antv$2f$g2$2f$esm$2f$mark$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tooltip2d"])()
    ]
}; //# sourceMappingURL=heatmap.js.map
}}),

};

//# sourceMappingURL=node_modules_%40antv_g2_esm_mark_dafeb3._.js.map